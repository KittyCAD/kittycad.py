name: build & test
on:
  push:
    branches: main
    paths:
      - '**.py'
      - .github/workflows/build-test.yml
  pull_request:
    paths:
      - '**.py'
      - .github/workflows/build-test.yml
jobs:
  build-test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      # Installation instructions are from: https://python-poetry.org/docs/
      - name: Install poetry
        shell: bash
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -
          echo "export PATH=\"${HOME}/.poetry/bin:\${PATH}\"" >> "${HOME}/.bashrc"
          echo "source ${HOME}/.poetry/env" >> "${HOME}/.bashrc"
          source "${HOME}/.bashrc"

      - name: Build
        shell: bash
        run: |
          source "${HOME}/.bashrc"
          cat "${HOME}/.bashrc"
          cd kittycad
          poetry build

      - name: Lint with flake8
        shell: bash
        run: |
          source "${HOME}/.bashrc"
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        shell: bash
        run: |
          source "${HOME}/.bashrc"
          cd kittycad
          pytest
