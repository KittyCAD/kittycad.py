[{"op": "add", "path": "/paths/~1file~1mass/post/x-python", "value": {"example": "from kittycad.models import FileMass\nfrom kittycad.api.file import create_file_mass\nfrom kittycad.types import Response\n\nfc: FileMass = create_file_mass.sync(client=client, material_density=\"<string>\", src_format=FileSourceFormat, body=bytes)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[FileMass] = create_file_mass.sync_detailed(client=client, material_density=\"<string>\", src_format=FileSourceFormat, body=bytes)\n\n# OR run async\nfc: FileMass = await create_file_mass.asyncio(client=client, material_density=\"<string>\", src_format=FileSourceFormat, body=bytes)\n\n# OR run async with more info\nresponse: Response[FileMass] = await create_file_mass.asyncio_detailed(client=client, material_density=\"<string>\", src_format=FileSourceFormat, body=bytes)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.file.create_file_mass.html"}}, {"op": "add", "path": "/paths/~1file~1mass/post/parameters/1/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1file~1mass/post/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1file~1mass/post/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1file~1mass/post/responses/201/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1users-extended/get/x-python", "value": {"example": "from kittycad.models import ExtendedUserResultsPage\nfrom kittycad.api.users import list_users_extended\nfrom kittycad.types import Response\n\nfc: ExtendedUserResultsPage = list_users_extended.sync(client=client, limit=\"<string>\", page_token=, sort_by=CreatedAtSortMode)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[ExtendedUserResultsPage] = list_users_extended.sync_detailed(client=client, limit=\"<string>\", page_token=, sort_by=CreatedAtSortMode)\n\n# OR run async\nfc: ExtendedUserResultsPage = await list_users_extended.asyncio(client=client, limit=\"<string>\", page_token=, sort_by=CreatedAtSortMode)\n\n# OR run async with more info\nresponse: Response[ExtendedUserResultsPage] = await list_users_extended.asyncio_detailed(client=client, limit=\"<string>\", page_token=, sort_by=CreatedAtSortMode)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.users.list_users_extended.html"}}, {"op": "add", "path": "/paths/~1users-extended/get/parameters/2/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1users-extended/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1users-extended/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1users-extended/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1energy~1{src_format}~1{output_format}/get/x-python", "value": {"example": "from kittycad.models import UnitEnergyConversion\nfrom kittycad.api.unit import get_energy_unit_conversion\nfrom kittycad.types import Response\n\nfc: UnitEnergyConversion = get_energy_unit_conversion.sync(client=client, output_format=UnitEnergyFormat, src_format=UnitEnergyFormat, value=\"<string>\")\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[UnitEnergyConversion] = get_energy_unit_conversion.sync_detailed(client=client, output_format=UnitEnergyFormat, src_format=UnitEnergyFormat, value=\"<string>\")\n\n# OR run async\nfc: UnitEnergyConversion = await get_energy_unit_conversion.asyncio(client=client, output_format=UnitEnergyFormat, src_format=UnitEnergyFormat, value=\"<string>\")\n\n# OR run async with more info\nresponse: Response[UnitEnergyConversion] = await get_energy_unit_conversion.asyncio_detailed(client=client, output_format=UnitEnergyFormat, src_format=UnitEnergyFormat, value=\"<string>\")", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.unit.get_energy_unit_conversion.html"}}, {"op": "add", "path": "/paths/~1unit~1conversion~1energy~1{src_format}~1{output_format}/get/parameters/0/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1energy~1{src_format}~1{output_format}/get/parameters/1/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1energy~1{src_format}~1{output_format}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1energy~1{src_format}~1{output_format}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1energy~1{src_format}~1{output_format}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1area~1{src_format}~1{output_format}/get/x-python", "value": {"example": "from kittycad.models import UnitAreaConversion\nfrom kittycad.api.unit import get_area_unit_conversion\nfrom kittycad.types import Response\n\nfc: UnitAreaConversion = get_area_unit_conversion.sync(client=client, output_format=UnitAreaFormat, src_format=UnitAreaFormat, value=\"<string>\")\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[UnitAreaConversion] = get_area_unit_conversion.sync_detailed(client=client, output_format=UnitAreaFormat, src_format=UnitAreaFormat, value=\"<string>\")\n\n# OR run async\nfc: UnitAreaConversion = await get_area_unit_conversion.asyncio(client=client, output_format=UnitAreaFormat, src_format=UnitAreaFormat, value=\"<string>\")\n\n# OR run async with more info\nresponse: Response[UnitAreaConversion] = await get_area_unit_conversion.asyncio_detailed(client=client, output_format=UnitAreaFormat, src_format=UnitAreaFormat, value=\"<string>\")", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.unit.get_area_unit_conversion.html"}}, {"op": "add", "path": "/paths/~1unit~1conversion~1area~1{src_format}~1{output_format}/get/parameters/0/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1area~1{src_format}~1{output_format}/get/parameters/1/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1area~1{src_format}~1{output_format}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1area~1{src_format}~1{output_format}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1area~1{src_format}~1{output_format}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1apps~1github~1callback/get/x-python", "value": {"example": "from kittycad.models import Error\nfrom kittycad.api.apps import apps_github_callback\nfrom kittycad.types import Response\n\nfc: Error = apps_github_callback.sync(client=client)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[Error] = apps_github_callback.sync_detailed(client=client)\n\n# OR run async\nfc: Error = await apps_github_callback.asyncio(client=client)\n\n# OR run async with more info\nresponse: Response[Error] = await apps_github_callback.asyncio_detailed(client=client)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.apps.apps_github_callback.html"}}, {"op": "add", "path": "/paths/~1apps~1github~1callback/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1apps~1github~1callback/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1file~1conversions~1{id}/get/x-python", "value": {"example": "from kittycad.models import FileConversion\nfrom kittycad.api.file import get_file_conversion_for_user\nfrom kittycad.types import Response\n\nfc: FileConversion = get_file_conversion_for_user.sync(client=client, id=)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[FileConversion] = get_file_conversion_for_user.sync_detailed(client=client, id=)\n\n# OR run async\nfc: FileConversion = await get_file_conversion_for_user.asyncio(client=client, id=)\n\n# OR run async with more info\nresponse: Response[FileConversion] = await get_file_conversion_for_user.asyncio_detailed(client=client, id=)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.file.get_file_conversion_for_user.html"}}, {"op": "add", "path": "/paths/~1user~1file~1conversions~1{id}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1file~1conversions~1{id}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1file~1conversions~1{id}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1logout/post/x-python", "value": {"example": "from kittycad.models import Error\nfrom kittycad.api.hidden import logout\nfrom kittycad.types import Response\n\nfc: Error = logout.sync(client=client)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[Error] = logout.sync_detailed(client=client)\n\n# OR run async\nfc: Error = await logout.asyncio(client=client)\n\n# OR run async with more info\nresponse: Response[Error] = await logout.asyncio_detailed(client=client)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.hidden.logout.html"}}, {"op": "add", "path": "/paths/~1logout/post/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1logout/post/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1async~1operations/get/x-python", "value": {"example": "from kittycad.models import AsyncApiCallResultsPage\nfrom kittycad.api.api-calls import list_async_operations\nfrom kittycad.types import Response\n\nfc: AsyncApiCallResultsPage = list_async_operations.sync(client=client, limit=\"<string>\", page_token=, sort_by=CreatedAtSortMode, status=ApiCallStatus)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[AsyncApiCallResultsPage] = list_async_operations.sync_detailed(client=client, limit=\"<string>\", page_token=, sort_by=CreatedAtSortMode, status=ApiCallStatus)\n\n# OR run async\nfc: AsyncApiCallResultsPage = await list_async_operations.asyncio(client=client, limit=\"<string>\", page_token=, sort_by=CreatedAtSortMode, status=ApiCallStatus)\n\n# OR run async with more info\nresponse: Response[AsyncApiCallResultsPage] = await list_async_operations.asyncio_detailed(client=client, limit=\"<string>\", page_token=, sort_by=CreatedAtSortMode, status=ApiCallStatus)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.api-calls.list_async_operations.html"}}, {"op": "add", "path": "/paths/~1async~1operations/get/parameters/2/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1async~1operations/get/parameters/3/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1async~1operations/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1async~1operations/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1async~1operations/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1auth~1email/options/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1auth~1email/options/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1auth~1email/post/x-python", "value": {"example": "from kittycad.models import VerificationToken\nfrom kittycad.api.hidden import auth_email\nfrom kittycad.types import Response\n\nfc: VerificationToken = auth_email.sync(client=client, body=EmailAuthenticationForm)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[VerificationToken] = auth_email.sync_detailed(client=client, body=EmailAuthenticationForm)\n\n# OR run async\nfc: VerificationToken = await auth_email.asyncio(client=client, body=EmailAuthenticationForm)\n\n# OR run async with more info\nresponse: Response[VerificationToken] = await auth_email.asyncio_detailed(client=client, body=EmailAuthenticationForm)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.hidden.auth_email.html"}}, {"op": "add", "path": "/paths/~1auth~1email/post/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1auth~1email/post/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1auth~1email/post/responses/201/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1auth~1email/post/requestBody/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1angular-velocity~1{src_format}~1{output_format}/get/x-python", "value": {"example": "from kittycad.models import UnitAngularVelocityConversion\nfrom kittycad.api.unit import get_angular_velocity_unit_conversion\nfrom kittycad.types import Response\n\nfc: UnitAngularVelocityConversion = get_angular_velocity_unit_conversion.sync(client=client, output_format=UnitAngularVelocityFormat, src_format=UnitAngularVelocityFormat, value=\"<string>\")\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[UnitAngularVelocityConversion] = get_angular_velocity_unit_conversion.sync_detailed(client=client, output_format=UnitAngularVelocityFormat, src_format=UnitAngularVelocityFormat, value=\"<string>\")\n\n# OR run async\nfc: UnitAngularVelocityConversion = await get_angular_velocity_unit_conversion.asyncio(client=client, output_format=UnitAngularVelocityFormat, src_format=UnitAngularVelocityFormat, value=\"<string>\")\n\n# OR run async with more info\nresponse: Response[UnitAngularVelocityConversion] = await get_angular_velocity_unit_conversion.asyncio_detailed(client=client, output_format=UnitAngularVelocityFormat, src_format=UnitAngularVelocityFormat, value=\"<string>\")", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.unit.get_angular_velocity_unit_conversion.html"}}, {"op": "add", "path": "/paths/~1unit~1conversion~1angular-velocity~1{src_format}~1{output_format}/get/parameters/0/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1angular-velocity~1{src_format}~1{output_format}/get/parameters/1/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1angular-velocity~1{src_format}~1{output_format}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1angular-velocity~1{src_format}~1{output_format}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1angular-velocity~1{src_format}~1{output_format}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1mass~1{src_format}~1{output_format}/get/x-python", "value": {"example": "from kittycad.models import UnitMassConversion\nfrom kittycad.api.unit import get_mass_unit_conversion\nfrom kittycad.types import Response\n\nfc: UnitMassConversion = get_mass_unit_conversion.sync(client=client, output_format=UnitMassFormat, src_format=UnitMassFormat, value=\"<string>\")\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[UnitMassConversion] = get_mass_unit_conversion.sync_detailed(client=client, output_format=UnitMassFormat, src_format=UnitMassFormat, value=\"<string>\")\n\n# OR run async\nfc: UnitMassConversion = await get_mass_unit_conversion.asyncio(client=client, output_format=UnitMassFormat, src_format=UnitMassFormat, value=\"<string>\")\n\n# OR run async with more info\nresponse: Response[UnitMassConversion] = await get_mass_unit_conversion.asyncio_detailed(client=client, output_format=UnitMassFormat, src_format=UnitMassFormat, value=\"<string>\")", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.unit.get_mass_unit_conversion.html"}}, {"op": "add", "path": "/paths/~1unit~1conversion~1mass~1{src_format}~1{output_format}/get/parameters/0/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1mass~1{src_format}~1{output_format}/get/parameters/1/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1mass~1{src_format}~1{output_format}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1mass~1{src_format}~1{output_format}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1mass~1{src_format}~1{output_format}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1payment~1methods~1{id}/options/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1payment~1methods~1{id}/options/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1payment~1methods~1{id}/delete/x-python", "value": {"example": "from kittycad.models import Error\nfrom kittycad.api.payments import delete_payment_method_for_user\nfrom kittycad.types import Response\n\nfc: Error = delete_payment_method_for_user.sync(client=client, id=)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[Error] = delete_payment_method_for_user.sync_detailed(client=client, id=)\n\n# OR run async\nfc: Error = await delete_payment_method_for_user.asyncio(client=client, id=)\n\n# OR run async with more info\nresponse: Response[Error] = await delete_payment_method_for_user.asyncio_detailed(client=client, id=)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.payments.delete_payment_method_for_user.html"}}, {"op": "add", "path": "/paths/~1user~1payment~1methods~1{id}/delete/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1payment~1methods~1{id}/delete/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1api-calls~1{id}/get/x-python", "value": {"example": "from kittycad.models import ApiCallWithPrice\nfrom kittycad.api.api-calls import get_api_call\nfrom kittycad.types import Response\n\nfc: ApiCallWithPrice = get_api_call.sync(client=client, id=)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[ApiCallWithPrice] = get_api_call.sync_detailed(client=client, id=)\n\n# OR run async\nfc: ApiCallWithPrice = await get_api_call.asyncio(client=client, id=)\n\n# OR run async with more info\nresponse: Response[ApiCallWithPrice] = await get_api_call.asyncio_detailed(client=client, id=)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.api-calls.get_api_call.html"}}, {"op": "add", "path": "/paths/~1api-calls~1{id}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1api-calls~1{id}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1api-calls~1{id}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1users-extended~1{id}/get/x-python", "value": {"example": "from kittycad.models import ExtendedUser\nfrom kittycad.api.users import get_user_extended\nfrom kittycad.types import Response\n\nfc: ExtendedUser = get_user_extended.sync(client=client, id=)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[ExtendedUser] = get_user_extended.sync_detailed(client=client, id=)\n\n# OR run async\nfc: ExtendedUser = await get_user_extended.asyncio(client=client, id=)\n\n# OR run async with more info\nresponse: Response[ExtendedUser] = await get_user_extended.asyncio_detailed(client=client, id=)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.users.get_user_extended.html"}}, {"op": "add", "path": "/paths/~1users-extended~1{id}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1users-extended~1{id}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1users-extended~1{id}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1temperature~1{src_format}~1{output_format}/get/x-python", "value": {"example": "from kittycad.models import UnitTemperatureConversion\nfrom kittycad.api.unit import get_temperature_unit_conversion\nfrom kittycad.types import Response\n\nfc: UnitTemperatureConversion = get_temperature_unit_conversion.sync(client=client, output_format=UnitTemperatureFormat, src_format=UnitTemperatureFormat, value=\"<string>\")\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[UnitTemperatureConversion] = get_temperature_unit_conversion.sync_detailed(client=client, output_format=UnitTemperatureFormat, src_format=UnitTemperatureFormat, value=\"<string>\")\n\n# OR run async\nfc: UnitTemperatureConversion = await get_temperature_unit_conversion.asyncio(client=client, output_format=UnitTemperatureFormat, src_format=UnitTemperatureFormat, value=\"<string>\")\n\n# OR run async with more info\nresponse: Response[UnitTemperatureConversion] = await get_temperature_unit_conversion.asyncio_detailed(client=client, output_format=UnitTemperatureFormat, src_format=UnitTemperatureFormat, value=\"<string>\")", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.unit.get_temperature_unit_conversion.html"}}, {"op": "add", "path": "/paths/~1unit~1conversion~1temperature~1{src_format}~1{output_format}/get/parameters/0/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1temperature~1{src_format}~1{output_format}/get/parameters/1/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1temperature~1{src_format}~1{output_format}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1temperature~1{src_format}~1{output_format}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1temperature~1{src_format}~1{output_format}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1payment~1methods/get/x-python", "value": {"example": "from kittycad.models import [PaymentMethod]\nfrom kittycad.api.payments import list_payment_methods_for_user\nfrom kittycad.types import Response\n\nfc: [PaymentMethod] = list_payment_methods_for_user.sync(client=client)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[[PaymentMethod]] = list_payment_methods_for_user.sync_detailed(client=client)\n\n# OR run async\nfc: [PaymentMethod] = await list_payment_methods_for_user.asyncio(client=client)\n\n# OR run async with more info\nresponse: Response[[PaymentMethod]] = await list_payment_methods_for_user.asyncio_detailed(client=client)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.payments.list_payment_methods_for_user.html"}}, {"op": "add", "path": "/paths/~1user~1payment~1methods/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1payment~1methods/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1payment~1methods/get/responses/200/content/application~1json/schema/items/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1api-calls/get/x-python", "value": {"example": "from kittycad.models import ApiCallWithPriceResultsPage\nfrom kittycad.api.api-calls import user_list_api_calls\nfrom kittycad.types import Response\n\nfc: ApiCallWithPriceResultsPage = user_list_api_calls.sync(client=client, limit=\"<string>\", page_token=, sort_by=CreatedAtSortMode)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[ApiCallWithPriceResultsPage] = user_list_api_calls.sync_detailed(client=client, limit=\"<string>\", page_token=, sort_by=CreatedAtSortMode)\n\n# OR run async\nfc: ApiCallWithPriceResultsPage = await user_list_api_calls.asyncio(client=client, limit=\"<string>\", page_token=, sort_by=CreatedAtSortMode)\n\n# OR run async with more info\nresponse: Response[ApiCallWithPriceResultsPage] = await user_list_api_calls.asyncio_detailed(client=client, limit=\"<string>\", page_token=, sort_by=CreatedAtSortMode)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.api-calls.user_list_api_calls.html"}}, {"op": "add", "path": "/paths/~1user~1api-calls/get/parameters/2/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1api-calls/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1api-calls/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1api-calls/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1oauth2~1device~1auth/post/requestBody/content/application~1x-www-form-urlencoded/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1api-calls~1{id}/get/x-python", "value": {"example": "from kittycad.models import ApiCallWithPrice\nfrom kittycad.api.api-calls import get_api_call_for_user\nfrom kittycad.types import Response\n\nfc: ApiCallWithPrice = get_api_call_for_user.sync(client=client, id=)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[ApiCallWithPrice] = get_api_call_for_user.sync_detailed(client=client, id=)\n\n# OR run async\nfc: ApiCallWithPrice = await get_api_call_for_user.asyncio(client=client, id=)\n\n# OR run async with more info\nresponse: Response[ApiCallWithPrice] = await get_api_call_for_user.asyncio_detailed(client=client, id=)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.api-calls.get_api_call_for_user.html"}}, {"op": "add", "path": "/paths/~1user~1api-calls~1{id}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1api-calls~1{id}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1api-calls~1{id}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1power~1{src_format}~1{output_format}/get/x-python", "value": {"example": "from kittycad.models import UnitPowerConversion\nfrom kittycad.api.unit import get_power_unit_conversion\nfrom kittycad.types import Response\n\nfc: UnitPowerConversion = get_power_unit_conversion.sync(client=client, output_format=UnitPowerFormat, src_format=UnitPowerFormat, value=\"<string>\")\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[UnitPowerConversion] = get_power_unit_conversion.sync_detailed(client=client, output_format=UnitPowerFormat, src_format=UnitPowerFormat, value=\"<string>\")\n\n# OR run async\nfc: UnitPowerConversion = await get_power_unit_conversion.asyncio(client=client, output_format=UnitPowerFormat, src_format=UnitPowerFormat, value=\"<string>\")\n\n# OR run async with more info\nresponse: Response[UnitPowerConversion] = await get_power_unit_conversion.asyncio_detailed(client=client, output_format=UnitPowerFormat, src_format=UnitPowerFormat, value=\"<string>\")", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.unit.get_power_unit_conversion.html"}}, {"op": "add", "path": "/paths/~1unit~1conversion~1power~1{src_format}~1{output_format}/get/parameters/0/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1power~1{src_format}~1{output_format}/get/parameters/1/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1power~1{src_format}~1{output_format}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1power~1{src_format}~1{output_format}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1power~1{src_format}~1{output_format}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1api-tokens~1{token}/options/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1api-tokens~1{token}/options/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1api-tokens~1{token}/get/x-python", "value": {"example": "from kittycad.models import ApiToken\nfrom kittycad.api.api-tokens import get_api_token_for_user\nfrom kittycad.types import Response\n\nfc: ApiToken = get_api_token_for_user.sync(client=client, token=\"<uuid>\")\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[ApiToken] = get_api_token_for_user.sync_detailed(client=client, token=\"<uuid>\")\n\n# OR run async\nfc: ApiToken = await get_api_token_for_user.asyncio(client=client, token=\"<uuid>\")\n\n# OR run async with more info\nresponse: Response[ApiToken] = await get_api_token_for_user.asyncio_detailed(client=client, token=\"<uuid>\")", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.api-tokens.get_api_token_for_user.html"}}, {"op": "add", "path": "/paths/~1user~1api-tokens~1{token}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1api-tokens~1{token}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1api-tokens~1{token}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1api-tokens~1{token}/delete/x-python", "value": {"example": "from kittycad.models import Error\nfrom kittycad.api.api-tokens import delete_api_token_for_user\nfrom kittycad.types import Response\n\nfc: Error = delete_api_token_for_user.sync(client=client, token=\"<uuid>\")\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[Error] = delete_api_token_for_user.sync_detailed(client=client, token=\"<uuid>\")\n\n# OR run async\nfc: Error = await delete_api_token_for_user.asyncio(client=client, token=\"<uuid>\")\n\n# OR run async with more info\nresponse: Response[Error] = await delete_api_token_for_user.asyncio_detailed(client=client, token=\"<uuid>\")", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.api-tokens.delete_api_token_for_user.html"}}, {"op": "add", "path": "/paths/~1user~1api-tokens~1{token}/delete/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1api-tokens~1{token}/delete/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1payment~1invoices/get/x-python", "value": {"example": "from kittycad.models import [Invoice]\nfrom kittycad.api.payments import list_invoices_for_user\nfrom kittycad.types import Response\n\nfc: [Invoice] = list_invoices_for_user.sync(client=client)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[[Invoice]] = list_invoices_for_user.sync_detailed(client=client)\n\n# OR run async\nfc: [Invoice] = await list_invoices_for_user.asyncio(client=client)\n\n# OR run async with more info\nresponse: Response[[Invoice]] = await list_invoices_for_user.asyncio_detailed(client=client)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.payments.list_invoices_for_user.html"}}, {"op": "add", "path": "/paths/~1user~1payment~1invoices/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1payment~1invoices/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1payment~1invoices/get/responses/200/content/application~1json/schema/items/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1solid-angle~1{src_format}~1{output_format}/get/x-python", "value": {"example": "from kittycad.models import UnitSolidAngleConversion\nfrom kittycad.api.unit import get_solid_angle_unit_conversion\nfrom kittycad.types import Response\n\nfc: UnitSolidAngleConversion = get_solid_angle_unit_conversion.sync(client=client, output_format=UnitSolidAngleFormat, src_format=UnitSolidAngleFormat, value=\"<string>\")\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[UnitSolidAngleConversion] = get_solid_angle_unit_conversion.sync_detailed(client=client, output_format=UnitSolidAngleFormat, src_format=UnitSolidAngleFormat, value=\"<string>\")\n\n# OR run async\nfc: UnitSolidAngleConversion = await get_solid_angle_unit_conversion.asyncio(client=client, output_format=UnitSolidAngleFormat, src_format=UnitSolidAngleFormat, value=\"<string>\")\n\n# OR run async with more info\nresponse: Response[UnitSolidAngleConversion] = await get_solid_angle_unit_conversion.asyncio_detailed(client=client, output_format=UnitSolidAngleFormat, src_format=UnitSolidAngleFormat, value=\"<string>\")", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.unit.get_solid_angle_unit_conversion.html"}}, {"op": "add", "path": "/paths/~1unit~1conversion~1solid-angle~1{src_format}~1{output_format}/get/parameters/0/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1solid-angle~1{src_format}~1{output_format}/get/parameters/1/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1solid-angle~1{src_format}~1{output_format}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1solid-angle~1{src_format}~1{output_format}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1solid-angle~1{src_format}~1{output_format}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1oauth2~1provider~1{provider}~1callback/get/parameters/0/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1oauth2~1provider~1{provider}~1callback/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1oauth2~1provider~1{provider}~1callback/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1time~1{src_format}~1{output_format}/get/x-python", "value": {"example": "from kittycad.models import UnitTimeConversion\nfrom kittycad.api.unit import get_time_unit_conversion\nfrom kittycad.types import Response\n\nfc: UnitTimeConversion = get_time_unit_conversion.sync(client=client, output_format=UnitTimeFormat, src_format=UnitTimeFormat, value=\"<string>\")\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[UnitTimeConversion] = get_time_unit_conversion.sync_detailed(client=client, output_format=UnitTimeFormat, src_format=UnitTimeFormat, value=\"<string>\")\n\n# OR run async\nfc: UnitTimeConversion = await get_time_unit_conversion.asyncio(client=client, output_format=UnitTimeFormat, src_format=UnitTimeFormat, value=\"<string>\")\n\n# OR run async with more info\nresponse: Response[UnitTimeConversion] = await get_time_unit_conversion.asyncio_detailed(client=client, output_format=UnitTimeFormat, src_format=UnitTimeFormat, value=\"<string>\")", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.unit.get_time_unit_conversion.html"}}, {"op": "add", "path": "/paths/~1unit~1conversion~1time~1{src_format}~1{output_format}/get/parameters/0/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1time~1{src_format}~1{output_format}/get/parameters/1/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1time~1{src_format}~1{output_format}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1time~1{src_format}~1{output_format}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1time~1{src_format}~1{output_format}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1payment~1balance/get/x-python", "value": {"example": "from kittycad.models import CustomerBalance\nfrom kittycad.api.payments import get_payment_balance_for_user\nfrom kittycad.types import Response\n\nfc: CustomerBalance = get_payment_balance_for_user.sync(client=client)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[CustomerBalance] = get_payment_balance_for_user.sync_detailed(client=client)\n\n# OR run async\nfc: CustomerBalance = await get_payment_balance_for_user.asyncio(client=client)\n\n# OR run async with more info\nresponse: Response[CustomerBalance] = await get_payment_balance_for_user.asyncio_detailed(client=client)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.payments.get_payment_balance_for_user.html"}}, {"op": "add", "path": "/paths/~1user~1payment~1balance/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1payment~1balance/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1payment~1balance/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1radiation~1{src_format}~1{output_format}/get/x-python", "value": {"example": "from kittycad.models import UnitRadiationConversion\nfrom kittycad.api.unit import get_radiation_unit_conversion\nfrom kittycad.types import Response\n\nfc: UnitRadiationConversion = get_radiation_unit_conversion.sync(client=client, output_format=UnitRadiationFormat, src_format=UnitRadiationFormat, value=\"<string>\")\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[UnitRadiationConversion] = get_radiation_unit_conversion.sync_detailed(client=client, output_format=UnitRadiationFormat, src_format=UnitRadiationFormat, value=\"<string>\")\n\n# OR run async\nfc: UnitRadiationConversion = await get_radiation_unit_conversion.asyncio(client=client, output_format=UnitRadiationFormat, src_format=UnitRadiationFormat, value=\"<string>\")\n\n# OR run async with more info\nresponse: Response[UnitRadiationConversion] = await get_radiation_unit_conversion.asyncio_detailed(client=client, output_format=UnitRadiationFormat, src_format=UnitRadiationFormat, value=\"<string>\")", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.unit.get_radiation_unit_conversion.html"}}, {"op": "add", "path": "/paths/~1unit~1conversion~1radiation~1{src_format}~1{output_format}/get/parameters/0/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1radiation~1{src_format}~1{output_format}/get/parameters/1/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1radiation~1{src_format}~1{output_format}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1radiation~1{src_format}~1{output_format}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1radiation~1{src_format}~1{output_format}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1oauth2~1device~1token/post/requestBody/content/application~1x-www-form-urlencoded/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1charge~1{src_format}~1{output_format}/get/x-python", "value": {"example": "from kittycad.models import UnitChargeConversion\nfrom kittycad.api.unit import get_charge_unit_conversion\nfrom kittycad.types import Response\n\nfc: UnitChargeConversion = get_charge_unit_conversion.sync(client=client, output_format=UnitChargeFormat, src_format=UnitChargeFormat, value=\"<string>\")\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[UnitChargeConversion] = get_charge_unit_conversion.sync_detailed(client=client, output_format=UnitChargeFormat, src_format=UnitChargeFormat, value=\"<string>\")\n\n# OR run async\nfc: UnitChargeConversion = await get_charge_unit_conversion.asyncio(client=client, output_format=UnitChargeFormat, src_format=UnitChargeFormat, value=\"<string>\")\n\n# OR run async with more info\nresponse: Response[UnitChargeConversion] = await get_charge_unit_conversion.asyncio_detailed(client=client, output_format=UnitChargeFormat, src_format=UnitChargeFormat, value=\"<string>\")", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.unit.get_charge_unit_conversion.html"}}, {"op": "add", "path": "/paths/~1unit~1conversion~1charge~1{src_format}~1{output_format}/get/parameters/0/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1charge~1{src_format}~1{output_format}/get/parameters/1/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1charge~1{src_format}~1{output_format}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1charge~1{src_format}~1{output_format}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1charge~1{src_format}~1{output_format}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1async~1operations~1{id}/get/x-python", "value": {"example": "from kittycad.models import FileConversion\nfrom kittycad.api.api-calls import get_async_operation\nfrom kittycad.types import Response\n\nfc: FileConversion = get_async_operation.sync(client=client, id=)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[FileConversion] = get_async_operation.sync_detailed(client=client, id=)\n\n# OR run async\nfc: FileConversion = await get_async_operation.asyncio(client=client, id=)\n\n# OR run async with more info\nresponse: Response[FileConversion] = await get_async_operation.asyncio_detailed(client=client, id=)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.api-calls.get_async_operation.html"}}, {"op": "add", "path": "/paths/~1async~1operations~1{id}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1async~1operations~1{id}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1async~1operations~1{id}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1api-calls/get/x-python", "value": {"example": "from kittycad.models import ApiCallWithPriceResultsPage\nfrom kittycad.api.api-calls import list_api_calls\nfrom kittycad.types import Response\n\nfc: ApiCallWithPriceResultsPage = list_api_calls.sync(client=client, limit=\"<string>\", page_token=, sort_by=CreatedAtSortMode)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[ApiCallWithPriceResultsPage] = list_api_calls.sync_detailed(client=client, limit=\"<string>\", page_token=, sort_by=CreatedAtSortMode)\n\n# OR run async\nfc: ApiCallWithPriceResultsPage = await list_api_calls.asyncio(client=client, limit=\"<string>\", page_token=, sort_by=CreatedAtSortMode)\n\n# OR run async with more info\nresponse: Response[ApiCallWithPriceResultsPage] = await list_api_calls.asyncio_detailed(client=client, limit=\"<string>\", page_token=, sort_by=CreatedAtSortMode)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.api-calls.list_api_calls.html"}}, {"op": "add", "path": "/paths/~1api-calls/get/parameters/2/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1api-calls/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1api-calls/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1api-calls/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1apps~1github~1consent/get/x-python", "value": {"example": "from kittycad.models import AppClientInfo\nfrom kittycad.api.apps import apps_github_consent\nfrom kittycad.types import Response\n\nfc: AppClientInfo = apps_github_consent.sync(client=client)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[AppClientInfo] = apps_github_consent.sync_detailed(client=client)\n\n# OR run async\nfc: AppClientInfo = await apps_github_consent.asyncio(client=client)\n\n# OR run async with more info\nresponse: Response[AppClientInfo] = await apps_github_consent.asyncio_detailed(client=client)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.apps.apps_github_consent.html"}}, {"op": "add", "path": "/paths/~1apps~1github~1consent/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1apps~1github~1consent/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1apps~1github~1consent/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1pressure~1{src_format}~1{output_format}/get/x-python", "value": {"example": "from kittycad.models import UnitPressureConversion\nfrom kittycad.api.unit import get_pressure_unit_conversion\nfrom kittycad.types import Response\n\nfc: UnitPressureConversion = get_pressure_unit_conversion.sync(client=client, output_format=UnitPressureFormat, src_format=UnitPressureFormat, value=\"<string>\")\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[UnitPressureConversion] = get_pressure_unit_conversion.sync_detailed(client=client, output_format=UnitPressureFormat, src_format=UnitPressureFormat, value=\"<string>\")\n\n# OR run async\nfc: UnitPressureConversion = await get_pressure_unit_conversion.asyncio(client=client, output_format=UnitPressureFormat, src_format=UnitPressureFormat, value=\"<string>\")\n\n# OR run async with more info\nresponse: Response[UnitPressureConversion] = await get_pressure_unit_conversion.asyncio_detailed(client=client, output_format=UnitPressureFormat, src_format=UnitPressureFormat, value=\"<string>\")", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.unit.get_pressure_unit_conversion.html"}}, {"op": "add", "path": "/paths/~1unit~1conversion~1pressure~1{src_format}~1{output_format}/get/parameters/0/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1pressure~1{src_format}~1{output_format}/get/parameters/1/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1pressure~1{src_format}~1{output_format}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1pressure~1{src_format}~1{output_format}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1pressure~1{src_format}~1{output_format}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1volume~1{src_format}~1{output_format}/get/x-python", "value": {"example": "from kittycad.models import UnitVolumeConversion\nfrom kittycad.api.unit import get_volume_unit_conversion\nfrom kittycad.types import Response\n\nfc: UnitVolumeConversion = get_volume_unit_conversion.sync(client=client, output_format=UnitVolumeFormat, src_format=UnitVolumeFormat, value=\"<string>\")\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[UnitVolumeConversion] = get_volume_unit_conversion.sync_detailed(client=client, output_format=UnitVolumeFormat, src_format=UnitVolumeFormat, value=\"<string>\")\n\n# OR run async\nfc: UnitVolumeConversion = await get_volume_unit_conversion.asyncio(client=client, output_format=UnitVolumeFormat, src_format=UnitVolumeFormat, value=\"<string>\")\n\n# OR run async with more info\nresponse: Response[UnitVolumeConversion] = await get_volume_unit_conversion.asyncio_detailed(client=client, output_format=UnitVolumeFormat, src_format=UnitVolumeFormat, value=\"<string>\")", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.unit.get_volume_unit_conversion.html"}}, {"op": "add", "path": "/paths/~1unit~1conversion~1volume~1{src_format}~1{output_format}/get/parameters/0/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1volume~1{src_format}~1{output_format}/get/parameters/1/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1volume~1{src_format}~1{output_format}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1volume~1{src_format}~1{output_format}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1volume~1{src_format}~1{output_format}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1oauth2~1device~1confirm/options/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1oauth2~1device~1confirm/options/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1oauth2~1device~1confirm/post/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1oauth2~1device~1confirm/post/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1oauth2~1device~1confirm/post/requestBody/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1file~1conversion~1{src_format}~1{output_format}/post/x-python", "value": {"example": "from kittycad.models import FileConversion\nfrom kittycad.api.file import create_file_conversion_with_base64_helper\nfrom kittycad.types import Response\n\nfc: FileConversion = create_file_conversion_with_base64_helper.sync(client=client, output_format=FileOutputFormat, src_format=FileSourceFormat, body=bytes)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[FileConversion] = create_file_conversion_with_base64_helper.sync_detailed(client=client, output_format=FileOutputFormat, src_format=FileSourceFormat, body=bytes)\n\n# OR run async\nfc: FileConversion = await create_file_conversion_with_base64_helper.asyncio(client=client, output_format=FileOutputFormat, src_format=FileSourceFormat, body=bytes)\n\n# OR run async with more info\nresponse: Response[FileConversion] = await create_file_conversion_with_base64_helper.asyncio_detailed(client=client, output_format=FileOutputFormat, src_format=FileSourceFormat, body=bytes)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.file.create_file_conversion_with_base64_helper.html"}}, {"op": "add", "path": "/paths/~1file~1conversion~1{src_format}~1{output_format}/post/parameters/0/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1file~1conversion~1{src_format}~1{output_format}/post/parameters/1/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1file~1conversion~1{src_format}~1{output_format}/post/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1file~1conversion~1{src_format}~1{output_format}/post/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1file~1conversion~1{src_format}~1{output_format}/post/responses/201/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1extended/get/x-python", "value": {"example": "from kittycad.models import ExtendedUser\nfrom kittycad.api.users import get_user_self_extended\nfrom kittycad.types import Response\n\nfc: ExtendedUser = get_user_self_extended.sync(client=client)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[ExtendedUser] = get_user_self_extended.sync_detailed(client=client)\n\n# OR run async\nfc: ExtendedUser = await get_user_self_extended.asyncio(client=client)\n\n# OR run async with more info\nresponse: Response[ExtendedUser] = await get_user_self_extended.asyncio_detailed(client=client)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.users.get_user_self_extended.html"}}, {"op": "add", "path": "/paths/~1user~1extended/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1extended/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1extended/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1session~1{token}/get/x-python", "value": {"example": "from kittycad.models import Session\nfrom kittycad.api.sessions import get_session_for_user\nfrom kittycad.types import Response\n\nfc: Session = get_session_for_user.sync(client=client, token=\"<uuid>\")\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[Session] = get_session_for_user.sync_detailed(client=client, token=\"<uuid>\")\n\n# OR run async\nfc: Session = await get_session_for_user.asyncio(client=client, token=\"<uuid>\")\n\n# OR run async with more info\nresponse: Response[Session] = await get_session_for_user.asyncio_detailed(client=client, token=\"<uuid>\")", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.sessions.get_session_for_user.html"}}, {"op": "add", "path": "/paths/~1user~1session~1{token}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1session~1{token}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1session~1{token}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1users~1{id}/get/x-python", "value": {"example": "from kittycad.models import User\nfrom kittycad.api.users import get_user\nfrom kittycad.types import Response\n\nfc: User = get_user.sync(client=client, id=)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[User] = get_user.sync_detailed(client=client, id=)\n\n# OR run async\nfc: User = await get_user.asyncio(client=client, id=)\n\n# OR run async with more info\nresponse: Response[User] = await get_user.asyncio_detailed(client=client, id=)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.users.get_user.html"}}, {"op": "add", "path": "/paths/~1users~1{id}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1users~1{id}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1users~1{id}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1payment~1intent/post/x-python", "value": {"example": "from kittycad.models import PaymentIntent\nfrom kittycad.api.payments import create_payment_intent_for_user\nfrom kittycad.types import Response\n\nfc: PaymentIntent = create_payment_intent_for_user.sync(client=client)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[PaymentIntent] = create_payment_intent_for_user.sync_detailed(client=client)\n\n# OR run async\nfc: PaymentIntent = await create_payment_intent_for_user.asyncio(client=client)\n\n# OR run async with more info\nresponse: Response[PaymentIntent] = await create_payment_intent_for_user.asyncio_detailed(client=client)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.payments.create_payment_intent_for_user.html"}}, {"op": "add", "path": "/paths/~1user~1payment~1intent/post/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1payment~1intent/post/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1payment~1intent/post/responses/201/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1users~1{id}~1api-calls/get/x-python", "value": {"example": "from kittycad.models import ApiCallWithPriceResultsPage\nfrom kittycad.api.api-calls import list_api_calls_for_user\nfrom kittycad.types import Response\n\nfc: ApiCallWithPriceResultsPage = list_api_calls_for_user.sync(client=client, id=, limit=\"<string>\", page_token=, sort_by=CreatedAtSortMode)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[ApiCallWithPriceResultsPage] = list_api_calls_for_user.sync_detailed(client=client, id=, limit=\"<string>\", page_token=, sort_by=CreatedAtSortMode)\n\n# OR run async\nfc: ApiCallWithPriceResultsPage = await list_api_calls_for_user.asyncio(client=client, id=, limit=\"<string>\", page_token=, sort_by=CreatedAtSortMode)\n\n# OR run async with more info\nresponse: Response[ApiCallWithPriceResultsPage] = await list_api_calls_for_user.asyncio_detailed(client=client, id=, limit=\"<string>\", page_token=, sort_by=CreatedAtSortMode)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.api-calls.list_api_calls_for_user.html"}}, {"op": "add", "path": "/paths/~1users~1{id}~1api-calls/get/parameters/3/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1users~1{id}~1api-calls/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1users~1{id}~1api-calls/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1users~1{id}~1api-calls/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1metric~1{src_format}~1{output_format}/get/x-python", "value": {"example": "from kittycad.models import UnitMetricConversion\nfrom kittycad.api.unit import get_metric_unit_conversion\nfrom kittycad.types import Response\n\nfc: UnitMetricConversion = get_metric_unit_conversion.sync(client=client, output_format=UnitMetricFormat, src_format=UnitMetricFormat, value=\"<string>\")\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[UnitMetricConversion] = get_metric_unit_conversion.sync_detailed(client=client, output_format=UnitMetricFormat, src_format=UnitMetricFormat, value=\"<string>\")\n\n# OR run async\nfc: UnitMetricConversion = await get_metric_unit_conversion.asyncio(client=client, output_format=UnitMetricFormat, src_format=UnitMetricFormat, value=\"<string>\")\n\n# OR run async with more info\nresponse: Response[UnitMetricConversion] = await get_metric_unit_conversion.asyncio_detailed(client=client, output_format=UnitMetricFormat, src_format=UnitMetricFormat, value=\"<string>\")", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.unit.get_metric_unit_conversion.html"}}, {"op": "add", "path": "/paths/~1unit~1conversion~1metric~1{src_format}~1{output_format}/get/parameters/0/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1metric~1{src_format}~1{output_format}/get/parameters/1/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1metric~1{src_format}~1{output_format}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1metric~1{src_format}~1{output_format}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1metric~1{src_format}~1{output_format}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1api-call-metrics/get/x-python", "value": {"example": "from kittycad.models import [ApiCallQueryGroup]\nfrom kittycad.api.api-calls import get_api_call_metrics\nfrom kittycad.types import Response\n\nfc: [ApiCallQueryGroup] = get_api_call_metrics.sync(client=client, group_by=ApiCallQueryGroupBy)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[[ApiCallQueryGroup]] = get_api_call_metrics.sync_detailed(client=client, group_by=ApiCallQueryGroupBy)\n\n# OR run async\nfc: [ApiCallQueryGroup] = await get_api_call_metrics.asyncio(client=client, group_by=ApiCallQueryGroupBy)\n\n# OR run async with more info\nresponse: Response[[ApiCallQueryGroup]] = await get_api_call_metrics.asyncio_detailed(client=client, group_by=ApiCallQueryGroupBy)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.api-calls.get_api_call_metrics.html"}}, {"op": "add", "path": "/paths/~1api-call-metrics/get/parameters/0/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1api-call-metrics/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1api-call-metrics/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1api-call-metrics/get/responses/200/content/application~1json/schema/items/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1voltage~1{src_format}~1{output_format}/get/x-python", "value": {"example": "from kittycad.models import UnitVoltageConversion\nfrom kittycad.api.unit import get_voltage_unit_conversion\nfrom kittycad.types import Response\n\nfc: UnitVoltageConversion = get_voltage_unit_conversion.sync(client=client, output_format=UnitVoltageFormat, src_format=UnitVoltageFormat, value=\"<string>\")\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[UnitVoltageConversion] = get_voltage_unit_conversion.sync_detailed(client=client, output_format=UnitVoltageFormat, src_format=UnitVoltageFormat, value=\"<string>\")\n\n# OR run async\nfc: UnitVoltageConversion = await get_voltage_unit_conversion.asyncio(client=client, output_format=UnitVoltageFormat, src_format=UnitVoltageFormat, value=\"<string>\")\n\n# OR run async with more info\nresponse: Response[UnitVoltageConversion] = await get_voltage_unit_conversion.asyncio_detailed(client=client, output_format=UnitVoltageFormat, src_format=UnitVoltageFormat, value=\"<string>\")", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.unit.get_voltage_unit_conversion.html"}}, {"op": "add", "path": "/paths/~1unit~1conversion~1voltage~1{src_format}~1{output_format}/get/parameters/0/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1voltage~1{src_format}~1{output_format}/get/parameters/1/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1voltage~1{src_format}~1{output_format}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1voltage~1{src_format}~1{output_format}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1voltage~1{src_format}~1{output_format}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1acceleration~1{src_format}~1{output_format}/get/x-python", "value": {"example": "from kittycad.models import UnitAccelerationConversion\nfrom kittycad.api.unit import get_acceleration_unit_conversion\nfrom kittycad.types import Response\n\nfc: UnitAccelerationConversion = get_acceleration_unit_conversion.sync(client=client, output_format=UnitAccelerationFormat, src_format=UnitAccelerationFormat, value=\"<string>\")\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[UnitAccelerationConversion] = get_acceleration_unit_conversion.sync_detailed(client=client, output_format=UnitAccelerationFormat, src_format=UnitAccelerationFormat, value=\"<string>\")\n\n# OR run async\nfc: UnitAccelerationConversion = await get_acceleration_unit_conversion.asyncio(client=client, output_format=UnitAccelerationFormat, src_format=UnitAccelerationFormat, value=\"<string>\")\n\n# OR run async with more info\nresponse: Response[UnitAccelerationConversion] = await get_acceleration_unit_conversion.asyncio_detailed(client=client, output_format=UnitAccelerationFormat, src_format=UnitAccelerationFormat, value=\"<string>\")", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.unit.get_acceleration_unit_conversion.html"}}, {"op": "add", "path": "/paths/~1unit~1conversion~1acceleration~1{src_format}~1{output_format}/get/parameters/0/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1acceleration~1{src_format}~1{output_format}/get/parameters/1/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1acceleration~1{src_format}~1{output_format}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1acceleration~1{src_format}~1{output_format}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1acceleration~1{src_format}~1{output_format}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1oauth2~1device~1verify/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1oauth2~1device~1verify/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1ping/get/x-python", "value": {"example": "from kittycad.models import Pong\nfrom kittycad.api.meta import ping\nfrom kittycad.types import Response\n\nfc: Pong = ping.sync(client=client)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[Pong] = ping.sync_detailed(client=client)\n\n# OR run async\nfc: Pong = await ping.asyncio(client=client)\n\n# OR run async with more info\nresponse: Response[Pong] = await ping.asyncio_detailed(client=client)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.meta.ping.html"}}, {"op": "add", "path": "/paths/~1ping/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1ping/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1ping/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1force~1{src_format}~1{output_format}/get/x-python", "value": {"example": "from kittycad.models import UnitForceConversion\nfrom kittycad.api.unit import get_force_unit_conversion\nfrom kittycad.types import Response\n\nfc: UnitForceConversion = get_force_unit_conversion.sync(client=client, output_format=UnitForceFormat, src_format=UnitForceFormat, value=\"<string>\")\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[UnitForceConversion] = get_force_unit_conversion.sync_detailed(client=client, output_format=UnitForceFormat, src_format=UnitForceFormat, value=\"<string>\")\n\n# OR run async\nfc: UnitForceConversion = await get_force_unit_conversion.asyncio(client=client, output_format=UnitForceFormat, src_format=UnitForceFormat, value=\"<string>\")\n\n# OR run async with more info\nresponse: Response[UnitForceConversion] = await get_force_unit_conversion.asyncio_detailed(client=client, output_format=UnitForceFormat, src_format=UnitForceFormat, value=\"<string>\")", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.unit.get_force_unit_conversion.html"}}, {"op": "add", "path": "/paths/~1unit~1conversion~1force~1{src_format}~1{output_format}/get/parameters/0/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1force~1{src_format}~1{output_format}/get/parameters/1/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1force~1{src_format}~1{output_format}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1force~1{src_format}~1{output_format}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1force~1{src_format}~1{output_format}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1velocity~1{src_format}~1{output_format}/get/x-python", "value": {"example": "from kittycad.models import UnitVelocityConversion\nfrom kittycad.api.unit import get_velocity_unit_conversion\nfrom kittycad.types import Response\n\nfc: UnitVelocityConversion = get_velocity_unit_conversion.sync(client=client, output_format=UnitVelocityFormat, src_format=UnitVelocityFormat, value=\"<string>\")\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[UnitVelocityConversion] = get_velocity_unit_conversion.sync_detailed(client=client, output_format=UnitVelocityFormat, src_format=UnitVelocityFormat, value=\"<string>\")\n\n# OR run async\nfc: UnitVelocityConversion = await get_velocity_unit_conversion.asyncio(client=client, output_format=UnitVelocityFormat, src_format=UnitVelocityFormat, value=\"<string>\")\n\n# OR run async with more info\nresponse: Response[UnitVelocityConversion] = await get_velocity_unit_conversion.asyncio_detailed(client=client, output_format=UnitVelocityFormat, src_format=UnitVelocityFormat, value=\"<string>\")", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.unit.get_velocity_unit_conversion.html"}}, {"op": "add", "path": "/paths/~1unit~1conversion~1velocity~1{src_format}~1{output_format}/get/parameters/0/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1velocity~1{src_format}~1{output_format}/get/parameters/1/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1velocity~1{src_format}~1{output_format}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1velocity~1{src_format}~1{output_format}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1velocity~1{src_format}~1{output_format}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1file~1execute~1{lang}/post/x-python", "value": {"example": "from kittycad.models import CodeOutput\nfrom kittycad.api.file import create_file_execution\nfrom kittycad.types import Response\n\nfc: CodeOutput = create_file_execution.sync(client=client, lang=CodeLanguage, output=, body=bytes)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[CodeOutput] = create_file_execution.sync_detailed(client=client, lang=CodeLanguage, output=, body=bytes)\n\n# OR run async\nfc: CodeOutput = await create_file_execution.asyncio(client=client, lang=CodeLanguage, output=, body=bytes)\n\n# OR run async with more info\nresponse: Response[CodeOutput] = await create_file_execution.asyncio_detailed(client=client, lang=CodeLanguage, output=, body=bytes)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.file.create_file_execution.html"}}, {"op": "add", "path": "/paths/~1file~1execute~1{lang}/post/parameters/0/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1file~1execute~1{lang}/post/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1file~1execute~1{lang}/post/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1file~1execute~1{lang}/post/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1file~1volume/post/x-python", "value": {"example": "from kittycad.models import FileVolume\nfrom kittycad.api.file import create_file_volume\nfrom kittycad.types import Response\n\nfc: FileVolume = create_file_volume.sync(client=client, src_format=FileSourceFormat, body=bytes)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[FileVolume] = create_file_volume.sync_detailed(client=client, src_format=FileSourceFormat, body=bytes)\n\n# OR run async\nfc: FileVolume = await create_file_volume.asyncio(client=client, src_format=FileSourceFormat, body=bytes)\n\n# OR run async with more info\nresponse: Response[FileVolume] = await create_file_volume.asyncio_detailed(client=client, src_format=FileSourceFormat, body=bytes)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.file.create_file_volume.html"}}, {"op": "add", "path": "/paths/~1file~1volume/post/parameters/0/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1file~1volume/post/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1file~1volume/post/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1file~1volume/post/responses/201/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1/get/x-python", "value": {"example": "from kittycad.models import dict\nfrom kittycad.api.meta import get_schema\nfrom kittycad.types import Response\n\nfc: dict = get_schema.sync(client=client)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[dict] = get_schema.sync_detailed(client=client)\n\n# OR run async\nfc: dict = await get_schema.asyncio(client=client)\n\n# OR run async with more info\nresponse: Response[dict] = await get_schema.asyncio_detailed(client=client)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.meta.get_schema.html"}}, {"op": "add", "path": "/paths/~1/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1magnetic-flux~1{src_format}~1{output_format}/get/x-python", "value": {"example": "from kittycad.models import UnitMagneticFluxConversion\nfrom kittycad.api.unit import get_magnetic_flux_unit_conversion\nfrom kittycad.types import Response\n\nfc: UnitMagneticFluxConversion = get_magnetic_flux_unit_conversion.sync(client=client, output_format=UnitMagneticFluxFormat, src_format=UnitMagneticFluxFormat, value=\"<string>\")\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[UnitMagneticFluxConversion] = get_magnetic_flux_unit_conversion.sync_detailed(client=client, output_format=UnitMagneticFluxFormat, src_format=UnitMagneticFluxFormat, value=\"<string>\")\n\n# OR run async\nfc: UnitMagneticFluxConversion = await get_magnetic_flux_unit_conversion.asyncio(client=client, output_format=UnitMagneticFluxFormat, src_format=UnitMagneticFluxFormat, value=\"<string>\")\n\n# OR run async with more info\nresponse: Response[UnitMagneticFluxConversion] = await get_magnetic_flux_unit_conversion.asyncio_detailed(client=client, output_format=UnitMagneticFluxFormat, src_format=UnitMagneticFluxFormat, value=\"<string>\")", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.unit.get_magnetic_flux_unit_conversion.html"}}, {"op": "add", "path": "/paths/~1unit~1conversion~1magnetic-flux~1{src_format}~1{output_format}/get/parameters/0/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1magnetic-flux~1{src_format}~1{output_format}/get/parameters/1/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1magnetic-flux~1{src_format}~1{output_format}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1magnetic-flux~1{src_format}~1{output_format}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1magnetic-flux~1{src_format}~1{output_format}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1auth~1email~1callback/get/x-python", "value": {"example": "from kittycad.models import Error\nfrom kittycad.api.hidden import auth_email_callback\nfrom kittycad.types import Response\n\nfc: Error = auth_email_callback.sync(client=client, callback_url=\"<string>\", email=\"<string>\", token=)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[Error] = auth_email_callback.sync_detailed(client=client, callback_url=\"<string>\", email=\"<string>\", token=)\n\n# OR run async\nfc: Error = await auth_email_callback.asyncio(client=client, callback_url=\"<string>\", email=\"<string>\", token=)\n\n# OR run async with more info\nresponse: Response[Error] = await auth_email_callback.asyncio_detailed(client=client, callback_url=\"<string>\", email=\"<string>\", token=)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.hidden.auth_email_callback.html"}}, {"op": "add", "path": "/paths/~1auth~1email~1callback/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1auth~1email~1callback/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1density~1{src_format}~1{output_format}/get/x-python", "value": {"example": "from kittycad.models import UnitDensityConversion\nfrom kittycad.api.unit import get_density_unit_conversion\nfrom kittycad.types import Response\n\nfc: UnitDensityConversion = get_density_unit_conversion.sync(client=client, output_format=UnitDensityFormat, src_format=UnitDensityFormat, value=\"<string>\")\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[UnitDensityConversion] = get_density_unit_conversion.sync_detailed(client=client, output_format=UnitDensityFormat, src_format=UnitDensityFormat, value=\"<string>\")\n\n# OR run async\nfc: UnitDensityConversion = await get_density_unit_conversion.asyncio(client=client, output_format=UnitDensityFormat, src_format=UnitDensityFormat, value=\"<string>\")\n\n# OR run async with more info\nresponse: Response[UnitDensityConversion] = await get_density_unit_conversion.asyncio_detailed(client=client, output_format=UnitDensityFormat, src_format=UnitDensityFormat, value=\"<string>\")", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.unit.get_density_unit_conversion.html"}}, {"op": "add", "path": "/paths/~1unit~1conversion~1density~1{src_format}~1{output_format}/get/parameters/0/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1density~1{src_format}~1{output_format}/get/parameters/1/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1density~1{src_format}~1{output_format}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1density~1{src_format}~1{output_format}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1density~1{src_format}~1{output_format}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1_meta~1info/get/x-python", "value": {"example": "from kittycad.models import Metadata\nfrom kittycad.api.meta import get_metadata\nfrom kittycad.types import Response\n\nfc: Metadata = get_metadata.sync(client=client)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[Metadata] = get_metadata.sync_detailed(client=client)\n\n# OR run async\nfc: Metadata = await get_metadata.asyncio(client=client)\n\n# OR run async with more info\nresponse: Response[Metadata] = await get_metadata.asyncio_detailed(client=client)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.meta.get_metadata.html"}}, {"op": "add", "path": "/paths/~1_meta~1info/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1_meta~1info/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1_meta~1info/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1data~1{src_format}~1{output_format}/get/x-python", "value": {"example": "from kittycad.models import UnitDataConversion\nfrom kittycad.api.unit import get_data_unit_conversion\nfrom kittycad.types import Response\n\nfc: UnitDataConversion = get_data_unit_conversion.sync(client=client, output_format=UnitDataFormat, src_format=UnitDataFormat, value=\"<string>\")\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[UnitDataConversion] = get_data_unit_conversion.sync_detailed(client=client, output_format=UnitDataFormat, src_format=UnitDataFormat, value=\"<string>\")\n\n# OR run async\nfc: UnitDataConversion = await get_data_unit_conversion.asyncio(client=client, output_format=UnitDataFormat, src_format=UnitDataFormat, value=\"<string>\")\n\n# OR run async with more info\nresponse: Response[UnitDataConversion] = await get_data_unit_conversion.asyncio_detailed(client=client, output_format=UnitDataFormat, src_format=UnitDataFormat, value=\"<string>\")", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.unit.get_data_unit_conversion.html"}}, {"op": "add", "path": "/paths/~1unit~1conversion~1data~1{src_format}~1{output_format}/get/parameters/0/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1data~1{src_format}~1{output_format}/get/parameters/1/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1data~1{src_format}~1{output_format}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1data~1{src_format}~1{output_format}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1data~1{src_format}~1{output_format}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1magnetic-field-strength~1{src_format}~1{output_format}/get/x-python", "value": {"example": "from kittycad.models import UnitMagneticFieldStrengthConversion\nfrom kittycad.api.unit import get_magnetic_field_strength_unit_conversion\nfrom kittycad.types import Response\n\nfc: UnitMagneticFieldStrengthConversion = get_magnetic_field_strength_unit_conversion.sync(client=client, output_format=UnitMagneticFieldStrengthFormat, src_format=UnitMagneticFieldStrengthFormat, value=\"<string>\")\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[UnitMagneticFieldStrengthConversion] = get_magnetic_field_strength_unit_conversion.sync_detailed(client=client, output_format=UnitMagneticFieldStrengthFormat, src_format=UnitMagneticFieldStrengthFormat, value=\"<string>\")\n\n# OR run async\nfc: UnitMagneticFieldStrengthConversion = await get_magnetic_field_strength_unit_conversion.asyncio(client=client, output_format=UnitMagneticFieldStrengthFormat, src_format=UnitMagneticFieldStrengthFormat, value=\"<string>\")\n\n# OR run async with more info\nresponse: Response[UnitMagneticFieldStrengthConversion] = await get_magnetic_field_strength_unit_conversion.asyncio_detailed(client=client, output_format=UnitMagneticFieldStrengthFormat, src_format=UnitMagneticFieldStrengthFormat, value=\"<string>\")", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.unit.get_magnetic_field_strength_unit_conversion.html"}}, {"op": "add", "path": "/paths/~1unit~1conversion~1magnetic-field-strength~1{src_format}~1{output_format}/get/parameters/0/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1magnetic-field-strength~1{src_format}~1{output_format}/get/parameters/1/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1magnetic-field-strength~1{src_format}~1{output_format}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1magnetic-field-strength~1{src_format}~1{output_format}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1magnetic-field-strength~1{src_format}~1{output_format}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1file~1conversions~1{id}/get/x-python", "value": {"example": "from kittycad.models import FileConversion\nfrom kittycad.api.file import get_file_conversion_with_base64_helper\nfrom kittycad.types import Response\n\nfc: FileConversion = get_file_conversion_with_base64_helper.sync(client=client, id=)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[FileConversion] = get_file_conversion_with_base64_helper.sync_detailed(client=client, id=)\n\n# OR run async\nfc: FileConversion = await get_file_conversion_with_base64_helper.asyncio(client=client, id=)\n\n# OR run async with more info\nresponse: Response[FileConversion] = await get_file_conversion_with_base64_helper.asyncio_detailed(client=client, id=)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.file.get_file_conversion_with_base64_helper.html"}}, {"op": "add", "path": "/paths/~1file~1conversions~1{id}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1file~1conversions~1{id}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1file~1conversions~1{id}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user/options/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user/options/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user/get/x-python", "value": {"example": "from kittycad.models import User\nfrom kittycad.api.users import get_user_self\nfrom kittycad.types import Response\n\nfc: User = get_user_self.sync(client=client)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[User] = get_user_self.sync_detailed(client=client)\n\n# OR run async\nfc: User = await get_user_self.asyncio(client=client)\n\n# OR run async with more info\nresponse: Response[User] = await get_user_self.asyncio_detailed(client=client)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.users.get_user_self.html"}}, {"op": "add", "path": "/paths/~1user/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user/delete/x-python", "value": {"example": "from kittycad.models import Error\nfrom kittycad.api.users import delete_user_self\nfrom kittycad.types import Response\n\nfc: Error = delete_user_self.sync(client=client)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[Error] = delete_user_self.sync_detailed(client=client)\n\n# OR run async\nfc: Error = await delete_user_self.asyncio(client=client)\n\n# OR run async with more info\nresponse: Response[Error] = await delete_user_self.asyncio_detailed(client=client)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.users.delete_user_self.html"}}, {"op": "add", "path": "/paths/~1user/delete/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user/delete/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user/put/x-python", "value": {"example": "from kittycad.models import User\nfrom kittycad.api.users import update_user_self\nfrom kittycad.types import Response\n\nfc: User = update_user_self.sync(client=client, body=UpdateUser)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[User] = update_user_self.sync_detailed(client=client, body=UpdateUser)\n\n# OR run async\nfc: User = await update_user_self.asyncio(client=client, body=UpdateUser)\n\n# OR run async with more info\nresponse: Response[User] = await update_user_self.asyncio_detailed(client=client, body=UpdateUser)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.users.update_user_self.html"}}, {"op": "add", "path": "/paths/~1user/put/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user/put/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user/put/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user/put/requestBody/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1data-transfer-rate~1{src_format}~1{output_format}/get/x-python", "value": {"example": "from kittycad.models import UnitDataTransferRateConversion\nfrom kittycad.api.unit import get_data_transfer_rate_unit_conversion\nfrom kittycad.types import Response\n\nfc: UnitDataTransferRateConversion = get_data_transfer_rate_unit_conversion.sync(client=client, output_format=UnitDataTransferRateFormat, src_format=UnitDataTransferRateFormat, value=\"<string>\")\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[UnitDataTransferRateConversion] = get_data_transfer_rate_unit_conversion.sync_detailed(client=client, output_format=UnitDataTransferRateFormat, src_format=UnitDataTransferRateFormat, value=\"<string>\")\n\n# OR run async\nfc: UnitDataTransferRateConversion = await get_data_transfer_rate_unit_conversion.asyncio(client=client, output_format=UnitDataTransferRateFormat, src_format=UnitDataTransferRateFormat, value=\"<string>\")\n\n# OR run async with more info\nresponse: Response[UnitDataTransferRateConversion] = await get_data_transfer_rate_unit_conversion.asyncio_detailed(client=client, output_format=UnitDataTransferRateFormat, src_format=UnitDataTransferRateFormat, value=\"<string>\")", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.unit.get_data_transfer_rate_unit_conversion.html"}}, {"op": "add", "path": "/paths/~1unit~1conversion~1data-transfer-rate~1{src_format}~1{output_format}/get/parameters/0/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1data-transfer-rate~1{src_format}~1{output_format}/get/parameters/1/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1data-transfer-rate~1{src_format}~1{output_format}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1data-transfer-rate~1{src_format}~1{output_format}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1data-transfer-rate~1{src_format}~1{output_format}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1file~1density/post/x-python", "value": {"example": "from kittycad.models import FileDensity\nfrom kittycad.api.file import create_file_density\nfrom kittycad.types import Response\n\nfc: FileDensity = create_file_density.sync(client=client, material_mass=\"<string>\", src_format=FileSourceFormat, body=bytes)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[FileDensity] = create_file_density.sync_detailed(client=client, material_mass=\"<string>\", src_format=FileSourceFormat, body=bytes)\n\n# OR run async\nfc: FileDensity = await create_file_density.asyncio(client=client, material_mass=\"<string>\", src_format=FileSourceFormat, body=bytes)\n\n# OR run async with more info\nresponse: Response[FileDensity] = await create_file_density.asyncio_detailed(client=client, material_mass=\"<string>\", src_format=FileSourceFormat, body=bytes)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.file.create_file_density.html"}}, {"op": "add", "path": "/paths/~1file~1density/post/parameters/1/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1file~1density/post/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1file~1density/post/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1file~1density/post/responses/201/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1angle~1{src_format}~1{output_format}/get/x-python", "value": {"example": "from kittycad.models import UnitAngleConversion\nfrom kittycad.api.unit import get_angle_unit_conversion\nfrom kittycad.types import Response\n\nfc: UnitAngleConversion = get_angle_unit_conversion.sync(client=client, output_format=UnitAngleFormat, src_format=UnitAngleFormat, value=\"<string>\")\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[UnitAngleConversion] = get_angle_unit_conversion.sync_detailed(client=client, output_format=UnitAngleFormat, src_format=UnitAngleFormat, value=\"<string>\")\n\n# OR run async\nfc: UnitAngleConversion = await get_angle_unit_conversion.asyncio(client=client, output_format=UnitAngleFormat, src_format=UnitAngleFormat, value=\"<string>\")\n\n# OR run async with more info\nresponse: Response[UnitAngleConversion] = await get_angle_unit_conversion.asyncio_detailed(client=client, output_format=UnitAngleFormat, src_format=UnitAngleFormat, value=\"<string>\")", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.unit.get_angle_unit_conversion.html"}}, {"op": "add", "path": "/paths/~1unit~1conversion~1angle~1{src_format}~1{output_format}/get/parameters/0/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1angle~1{src_format}~1{output_format}/get/parameters/1/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1angle~1{src_format}~1{output_format}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1angle~1{src_format}~1{output_format}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1angle~1{src_format}~1{output_format}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1apps~1github~1webhook/post/x-python", "value": {"example": "from kittycad.models import Error\nfrom kittycad.api.apps import apps_github_webhook\nfrom kittycad.types import Response\n\nfc: Error = apps_github_webhook.sync(client=client, body=bytes)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[Error] = apps_github_webhook.sync_detailed(client=client, body=bytes)\n\n# OR run async\nfc: Error = await apps_github_webhook.asyncio(client=client, body=bytes)\n\n# OR run async with more info\nresponse: Response[Error] = await apps_github_webhook.asyncio_detailed(client=client, body=bytes)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.apps.apps_github_webhook.html"}}, {"op": "add", "path": "/paths/~1apps~1github~1webhook/post/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1apps~1github~1webhook/post/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1illuminance~1{src_format}~1{output_format}/get/x-python", "value": {"example": "from kittycad.models import UnitIlluminanceConversion\nfrom kittycad.api.unit import get_illuminance_unit_conversion\nfrom kittycad.types import Response\n\nfc: UnitIlluminanceConversion = get_illuminance_unit_conversion.sync(client=client, output_format=UnitIlluminanceFormat, src_format=UnitIlluminanceFormat, value=\"<string>\")\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[UnitIlluminanceConversion] = get_illuminance_unit_conversion.sync_detailed(client=client, output_format=UnitIlluminanceFormat, src_format=UnitIlluminanceFormat, value=\"<string>\")\n\n# OR run async\nfc: UnitIlluminanceConversion = await get_illuminance_unit_conversion.asyncio(client=client, output_format=UnitIlluminanceFormat, src_format=UnitIlluminanceFormat, value=\"<string>\")\n\n# OR run async with more info\nresponse: Response[UnitIlluminanceConversion] = await get_illuminance_unit_conversion.asyncio_detailed(client=client, output_format=UnitIlluminanceFormat, src_format=UnitIlluminanceFormat, value=\"<string>\")", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.unit.get_illuminance_unit_conversion.html"}}, {"op": "add", "path": "/paths/~1unit~1conversion~1illuminance~1{src_format}~1{output_format}/get/parameters/0/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1illuminance~1{src_format}~1{output_format}/get/parameters/1/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1illuminance~1{src_format}~1{output_format}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1illuminance~1{src_format}~1{output_format}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1illuminance~1{src_format}~1{output_format}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1concentration~1{src_format}~1{output_format}/get/x-python", "value": {"example": "from kittycad.models import UnitConcentrationConversion\nfrom kittycad.api.unit import get_concentration_unit_conversion\nfrom kittycad.types import Response\n\nfc: UnitConcentrationConversion = get_concentration_unit_conversion.sync(client=client, output_format=UnitConcentrationFormat, src_format=UnitConcentrationFormat, value=\"<string>\")\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[UnitConcentrationConversion] = get_concentration_unit_conversion.sync_detailed(client=client, output_format=UnitConcentrationFormat, src_format=UnitConcentrationFormat, value=\"<string>\")\n\n# OR run async\nfc: UnitConcentrationConversion = await get_concentration_unit_conversion.asyncio(client=client, output_format=UnitConcentrationFormat, src_format=UnitConcentrationFormat, value=\"<string>\")\n\n# OR run async with more info\nresponse: Response[UnitConcentrationConversion] = await get_concentration_unit_conversion.asyncio_detailed(client=client, output_format=UnitConcentrationFormat, src_format=UnitConcentrationFormat, value=\"<string>\")", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.unit.get_concentration_unit_conversion.html"}}, {"op": "add", "path": "/paths/~1unit~1conversion~1concentration~1{src_format}~1{output_format}/get/parameters/0/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1concentration~1{src_format}~1{output_format}/get/parameters/1/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1concentration~1{src_format}~1{output_format}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1concentration~1{src_format}~1{output_format}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1concentration~1{src_format}~1{output_format}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1api-tokens/get/x-python", "value": {"example": "from kittycad.models import ApiTokenResultsPage\nfrom kittycad.api.api-tokens import list_api_tokens_for_user\nfrom kittycad.types import Response\n\nfc: ApiTokenResultsPage = list_api_tokens_for_user.sync(client=client, limit=\"<string>\", page_token=, sort_by=CreatedAtSortMode)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[ApiTokenResultsPage] = list_api_tokens_for_user.sync_detailed(client=client, limit=\"<string>\", page_token=, sort_by=CreatedAtSortMode)\n\n# OR run async\nfc: ApiTokenResultsPage = await list_api_tokens_for_user.asyncio(client=client, limit=\"<string>\", page_token=, sort_by=CreatedAtSortMode)\n\n# OR run async with more info\nresponse: Response[ApiTokenResultsPage] = await list_api_tokens_for_user.asyncio_detailed(client=client, limit=\"<string>\", page_token=, sort_by=CreatedAtSortMode)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.api-tokens.list_api_tokens_for_user.html"}}, {"op": "add", "path": "/paths/~1user~1api-tokens/get/parameters/2/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1api-tokens/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1api-tokens/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1api-tokens/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1api-tokens/post/x-python", "value": {"example": "from kittycad.models import ApiToken\nfrom kittycad.api.api-tokens import create_api_token_for_user\nfrom kittycad.types import Response\n\nfc: ApiToken = create_api_token_for_user.sync(client=client)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[ApiToken] = create_api_token_for_user.sync_detailed(client=client)\n\n# OR run async\nfc: ApiToken = await create_api_token_for_user.asyncio(client=client)\n\n# OR run async with more info\nresponse: Response[ApiToken] = await create_api_token_for_user.asyncio_detailed(client=client)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.api-tokens.create_api_token_for_user.html"}}, {"op": "add", "path": "/paths/~1user~1api-tokens/post/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1api-tokens/post/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1api-tokens/post/responses/201/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1oauth2~1provider~1{provider}~1consent/get/parameters/0/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1oauth2~1provider~1{provider}~1consent/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1oauth2~1provider~1{provider}~1consent/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1oauth2~1provider~1{provider}~1consent/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1constant~1physics~1{constant}/get/x-python", "value": {"example": "from kittycad.models import PhysicsConstant\nfrom kittycad.api.constant import get_physics_constant\nfrom kittycad.types import Response\n\nfc: PhysicsConstant = get_physics_constant.sync(client=client, constant=PhysicsConstantName)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[PhysicsConstant] = get_physics_constant.sync_detailed(client=client, constant=PhysicsConstantName)\n\n# OR run async\nfc: PhysicsConstant = await get_physics_constant.asyncio(client=client, constant=PhysicsConstantName)\n\n# OR run async with more info\nresponse: Response[PhysicsConstant] = await get_physics_constant.asyncio_detailed(client=client, constant=PhysicsConstantName)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.constant.get_physics_constant.html"}}, {"op": "add", "path": "/paths/~1constant~1physics~1{constant}/get/parameters/0/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1constant~1physics~1{constant}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1constant~1physics~1{constant}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1constant~1physics~1{constant}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1users/get/x-python", "value": {"example": "from kittycad.models import UserResultsPage\nfrom kittycad.api.users import list_users\nfrom kittycad.types import Response\n\nfc: UserResultsPage = list_users.sync(client=client, limit=\"<string>\", page_token=, sort_by=CreatedAtSortMode)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[UserResultsPage] = list_users.sync_detailed(client=client, limit=\"<string>\", page_token=, sort_by=CreatedAtSortMode)\n\n# OR run async\nfc: UserResultsPage = await list_users.asyncio(client=client, limit=\"<string>\", page_token=, sort_by=CreatedAtSortMode)\n\n# OR run async with more info\nresponse: Response[UserResultsPage] = await list_users.asyncio_detailed(client=client, limit=\"<string>\", page_token=, sort_by=CreatedAtSortMode)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.users.list_users.html"}}, {"op": "add", "path": "/paths/~1users/get/parameters/2/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1users/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1users/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1users/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1payment/options/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1payment/options/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1payment/delete/x-python", "value": {"example": "from kittycad.models import Error\nfrom kittycad.api.payments import delete_payment_information_for_user\nfrom kittycad.types import Response\n\nfc: Error = delete_payment_information_for_user.sync(client=client)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[Error] = delete_payment_information_for_user.sync_detailed(client=client)\n\n# OR run async\nfc: Error = await delete_payment_information_for_user.asyncio(client=client)\n\n# OR run async with more info\nresponse: Response[Error] = await delete_payment_information_for_user.asyncio_detailed(client=client)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.payments.delete_payment_information_for_user.html"}}, {"op": "add", "path": "/paths/~1user~1payment/delete/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1payment/delete/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1payment/put/x-python", "value": {"example": "from kittycad.models import Customer\nfrom kittycad.api.payments import update_payment_information_for_user\nfrom kittycad.types import Response\n\nfc: Customer = update_payment_information_for_user.sync(client=client, body=BillingInfo)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[Customer] = update_payment_information_for_user.sync_detailed(client=client, body=BillingInfo)\n\n# OR run async\nfc: Customer = await update_payment_information_for_user.asyncio(client=client, body=BillingInfo)\n\n# OR run async with more info\nresponse: Response[Customer] = await update_payment_information_for_user.asyncio_detailed(client=client, body=BillingInfo)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.payments.update_payment_information_for_user.html"}}, {"op": "add", "path": "/paths/~1user~1payment/put/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1payment/put/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1payment/put/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1payment/put/requestBody/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1payment/get/x-python", "value": {"example": "from kittycad.models import Customer\nfrom kittycad.api.payments import get_payment_information_for_user\nfrom kittycad.types import Response\n\nfc: Customer = get_payment_information_for_user.sync(client=client)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[Customer] = get_payment_information_for_user.sync_detailed(client=client)\n\n# OR run async\nfc: Customer = await get_payment_information_for_user.asyncio(client=client)\n\n# OR run async with more info\nresponse: Response[Customer] = await get_payment_information_for_user.asyncio_detailed(client=client)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.payments.get_payment_information_for_user.html"}}, {"op": "add", "path": "/paths/~1user~1payment/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1payment/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1payment/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1payment/post/x-python", "value": {"example": "from kittycad.models import Customer\nfrom kittycad.api.payments import create_payment_information_for_user\nfrom kittycad.types import Response\n\nfc: Customer = create_payment_information_for_user.sync(client=client, body=BillingInfo)\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[Customer] = create_payment_information_for_user.sync_detailed(client=client, body=BillingInfo)\n\n# OR run async\nfc: Customer = await create_payment_information_for_user.asyncio(client=client, body=BillingInfo)\n\n# OR run async with more info\nresponse: Response[Customer] = await create_payment_information_for_user.asyncio_detailed(client=client, body=BillingInfo)", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.payments.create_payment_information_for_user.html"}}, {"op": "add", "path": "/paths/~1user~1payment/post/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1payment/post/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1payment/post/responses/201/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1user~1payment/post/requestBody/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1length~1{src_format}~1{output_format}/get/x-python", "value": {"example": "from kittycad.models import UnitLengthConversion\nfrom kittycad.api.unit import get_length_unit_conversion\nfrom kittycad.types import Response\n\nfc: UnitLengthConversion = get_length_unit_conversion.sync(client=client, output_format=UnitLengthFormat, src_format=UnitLengthFormat, value=\"<string>\")\n\n# OR if you need more info (e.g. status_code)\nresponse: Response[UnitLengthConversion] = get_length_unit_conversion.sync_detailed(client=client, output_format=UnitLengthFormat, src_format=UnitLengthFormat, value=\"<string>\")\n\n# OR run async\nfc: UnitLengthConversion = await get_length_unit_conversion.asyncio(client=client, output_format=UnitLengthFormat, src_format=UnitLengthFormat, value=\"<string>\")\n\n# OR run async with more info\nresponse: Response[UnitLengthConversion] = await get_length_unit_conversion.asyncio_detailed(client=client, output_format=UnitLengthFormat, src_format=UnitLengthFormat, value=\"<string>\")", "libDocsLink": "https://python.api.docs.kittycad.io/modules/kittycad.api.unit.get_length_unit_conversion.html"}}, {"op": "add", "path": "/paths/~1unit~1conversion~1length~1{src_format}~1{output_format}/get/parameters/0/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1length~1{src_format}~1{output_format}/get/parameters/1/schema/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1length~1{src_format}~1{output_format}/get/responses/4XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1length~1{src_format}~1{output_format}/get/responses/5XX/x-scope", "value": [""]}, {"op": "add", "path": "/paths/~1unit~1conversion~1length~1{src_format}~1{output_format}/get/responses/200/content/application~1json/schema/x-scope", "value": [""]}, {"op": "add", "path": "/info/x-python", "value": {"client": "# Create a client with your token.\nfrom kittycad import Client\n\nclient = Client(token=\"$TOKEN\")\n\n# - OR -\n\n# Create a new client with your token parsed from the environment variable:\n#   `KITTYCAD_API_TOKEN`.\nfrom kittycad import ClientFromEnv\n\nclient = ClientFromEnv()", "install": "pip install kittycad"}}, {"op": "add", "path": "/components/schemas/UnitAngleConversion/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitAngleConversion"]}, {"op": "add", "path": "/components/schemas/UnitAngleConversion/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitAngleConversion"]}, {"op": "add", "path": "/components/schemas/UnitAngleConversion/properties/output_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitAngleConversion"]}, {"op": "add", "path": "/components/schemas/UnitAngleConversion/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitAngleConversion"]}, {"op": "add", "path": "/components/schemas/UnitAccelerationConversion/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitAccelerationConversion"]}, {"op": "add", "path": "/components/schemas/UnitAccelerationConversion/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitAccelerationConversion"]}, {"op": "add", "path": "/components/schemas/UnitAccelerationConversion/properties/output_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitAccelerationConversion"]}, {"op": "add", "path": "/components/schemas/UnitAccelerationConversion/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitAccelerationConversion"]}, {"op": "add", "path": "/components/schemas/EngineMetadata/properties/cache/allOf/0/x-scope", "value": ["", "#/components/schemas/Metadata", "#/components/schemas/EngineMetadata"]}, {"op": "add", "path": "/components/schemas/EngineMetadata/properties/pubsub/allOf/0/x-scope", "value": ["", "#/components/schemas/Metadata", "#/components/schemas/EngineMetadata"]}, {"op": "add", "path": "/components/schemas/EngineMetadata/properties/environment/allOf/0/x-scope", "value": ["", "#/components/schemas/Metadata", "#/components/schemas/EngineMetadata"]}, {"op": "add", "path": "/components/schemas/EngineMetadata/properties/fs/allOf/0/x-scope", "value": ["", "#/components/schemas/Metadata", "#/components/schemas/EngineMetadata"]}, {"op": "add", "path": "/components/schemas/UnitTimeConversion/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitTimeConversion"]}, {"op": "add", "path": "/components/schemas/UnitTimeConversion/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitTimeConversion"]}, {"op": "add", "path": "/components/schemas/UnitTimeConversion/properties/output_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitTimeConversion"]}, {"op": "add", "path": "/components/schemas/UnitTimeConversion/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitTimeConversion"]}, {"op": "add", "path": "/components/schemas/UnitVelocityConversion/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitVelocityConversion"]}, {"op": "add", "path": "/components/schemas/UnitVelocityConversion/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitVelocityConversion"]}, {"op": "add", "path": "/components/schemas/UnitVelocityConversion/properties/output_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitVelocityConversion"]}, {"op": "add", "path": "/components/schemas/UnitVelocityConversion/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitVelocityConversion"]}, {"op": "add", "path": "/components/schemas/AsyncApiCall/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/AsyncApiCallResultsPage", "#/components/schemas/AsyncApiCall"]}, {"op": "add", "path": "/components/schemas/AsyncApiCall/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/AsyncApiCallResultsPage", "#/components/schemas/AsyncApiCall"]}, {"op": "add", "path": "/components/schemas/AsyncApiCall/properties/type/allOf/0/x-scope", "value": ["", "#/components/schemas/AsyncApiCallResultsPage", "#/components/schemas/AsyncApiCall"]}, {"op": "add", "path": "/components/schemas/UnitDataConversion/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitDataConversion"]}, {"op": "add", "path": "/components/schemas/UnitDataConversion/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitDataConversion"]}, {"op": "add", "path": "/components/schemas/UnitDataConversion/properties/output_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitDataConversion"]}, {"op": "add", "path": "/components/schemas/UnitDataConversion/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitDataConversion"]}, {"op": "add", "path": "/components/schemas/FileMass/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/FileMass"]}, {"op": "add", "path": "/components/schemas/FileMass/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/FileMass"]}, {"op": "add", "path": "/components/schemas/FileMass/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/FileMass"]}, {"op": "add", "path": "/components/schemas/UnitDataTransferRateConversion/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitDataTransferRateConversion"]}, {"op": "add", "path": "/components/schemas/UnitDataTransferRateConversion/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitDataTransferRateConversion"]}, {"op": "add", "path": "/components/schemas/UnitDataTransferRateConversion/properties/output_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitDataTransferRateConversion"]}, {"op": "add", "path": "/components/schemas/UnitDataTransferRateConversion/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitDataTransferRateConversion"]}, {"op": "add", "path": "/components/schemas/UnitMagneticFieldStrengthConversion/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitMagneticFieldStrengthConversion"]}, {"op": "add", "path": "/components/schemas/UnitMagneticFieldStrengthConversion/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitMagneticFieldStrengthConversion"]}, {"op": "add", "path": "/components/schemas/UnitMagneticFieldStrengthConversion/properties/output_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitMagneticFieldStrengthConversion"]}, {"op": "add", "path": "/components/schemas/UnitMagneticFieldStrengthConversion/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitMagneticFieldStrengthConversion"]}, {"op": "add", "path": "/components/schemas/UnitMagneticFluxConversion/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitMagneticFluxConversion"]}, {"op": "add", "path": "/components/schemas/UnitMagneticFluxConversion/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitMagneticFluxConversion"]}, {"op": "add", "path": "/components/schemas/UnitMagneticFluxConversion/properties/output_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitMagneticFluxConversion"]}, {"op": "add", "path": "/components/schemas/UnitMagneticFluxConversion/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitMagneticFluxConversion"]}, {"op": "add", "path": "/components/schemas/UnitDensityConversion/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitDensityConversion"]}, {"op": "add", "path": "/components/schemas/UnitDensityConversion/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitDensityConversion"]}, {"op": "add", "path": "/components/schemas/UnitDensityConversion/properties/output_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitDensityConversion"]}, {"op": "add", "path": "/components/schemas/UnitDensityConversion/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitDensityConversion"]}, {"op": "add", "path": "/components/schemas/Customer/properties/currency/allOf/0/x-scope", "value": ["", "#/components/schemas/Customer"]}, {"op": "add", "path": "/components/schemas/Customer/properties/address/allOf/0/x-scope", "value": ["", "#/components/schemas/Customer"]}, {"op": "add", "path": "/components/schemas/FileDensity/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/FileDensity"]}, {"op": "add", "path": "/components/schemas/FileDensity/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/FileDensity"]}, {"op": "add", "path": "/components/schemas/FileDensity/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/FileDensity"]}, {"op": "add", "path": "/components/schemas/AsyncApiCallResultsPage/properties/items/items/x-scope", "value": ["", "#/components/schemas/AsyncApiCallResultsPage"]}, {"op": "add", "path": "/components/schemas/AsyncApiCallOutput/oneOf/0/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/AsyncApiCallOutput"]}, {"op": "add", "path": "/components/schemas/AsyncApiCallOutput/oneOf/0/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/AsyncApiCallOutput"]}, {"op": "add", "path": "/components/schemas/AsyncApiCallOutput/oneOf/0/properties/output_format/allOf/0/x-scope", "value": ["", "#/components/schemas/AsyncApiCallOutput"]}, {"op": "add", "path": "/components/schemas/AsyncApiCallOutput/oneOf/0/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/AsyncApiCallOutput"]}, {"op": "add", "path": "/components/schemas/AsyncApiCallOutput/oneOf/1/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/AsyncApiCallOutput"]}, {"op": "add", "path": "/components/schemas/AsyncApiCallOutput/oneOf/1/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/AsyncApiCallOutput"]}, {"op": "add", "path": "/components/schemas/AsyncApiCallOutput/oneOf/1/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/AsyncApiCallOutput"]}, {"op": "add", "path": "/components/schemas/AsyncApiCallOutput/oneOf/2/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/AsyncApiCallOutput"]}, {"op": "add", "path": "/components/schemas/AsyncApiCallOutput/oneOf/2/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/AsyncApiCallOutput"]}, {"op": "add", "path": "/components/schemas/AsyncApiCallOutput/oneOf/2/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/AsyncApiCallOutput"]}, {"op": "add", "path": "/components/schemas/AsyncApiCallOutput/oneOf/3/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/AsyncApiCallOutput"]}, {"op": "add", "path": "/components/schemas/AsyncApiCallOutput/oneOf/3/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/AsyncApiCallOutput"]}, {"op": "add", "path": "/components/schemas/AsyncApiCallOutput/oneOf/3/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/AsyncApiCallOutput"]}, {"op": "add", "path": "/components/schemas/ApiTokenResultsPage/properties/items/items/x-scope", "value": ["", "#/components/schemas/ApiTokenResultsPage"]}, {"op": "add", "path": "/components/schemas/UnitIlluminanceConversion/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitIlluminanceConversion"]}, {"op": "add", "path": "/components/schemas/UnitIlluminanceConversion/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitIlluminanceConversion"]}, {"op": "add", "path": "/components/schemas/UnitIlluminanceConversion/properties/output_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitIlluminanceConversion"]}, {"op": "add", "path": "/components/schemas/UnitIlluminanceConversion/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitIlluminanceConversion"]}, {"op": "add", "path": "/components/schemas/JetstreamStats/properties/api/allOf/0/x-scope", "value": ["", "#/components/schemas/Metadata", "#/components/schemas/EngineMetadata", "#/components/schemas/Connection", "#/components/schemas/Jetstream", "#/components/schemas/JetstreamStats"]}, {"op": "add", "path": "/components/schemas/ApiCallWithPrice/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/ApiCallWithPriceResultsPage", "#/components/schemas/ApiCallWithPrice"]}, {"op": "add", "path": "/components/schemas/ApiCallWithPrice/properties/method/allOf/0/x-scope", "value": ["", "#/components/schemas/ApiCallWithPriceResultsPage", "#/components/schemas/ApiCallWithPrice"]}, {"op": "add", "path": "/components/schemas/ApiCallWithPrice/properties/token/allOf/0/x-scope", "value": ["", "#/components/schemas/ApiCallWithPriceResultsPage", "#/components/schemas/ApiCallWithPrice"]}, {"op": "add", "path": "/components/schemas/DockerSystemInfo/properties/plugins/allOf/0/x-scope", "value": ["", "#/components/schemas/Metadata", "#/components/schemas/ExecutorMetadata", "#/components/schemas/DockerSystemInfo"]}, {"op": "add", "path": "/components/schemas/DockerSystemInfo/properties/containerd_commit/allOf/0/x-scope", "value": ["", "#/components/schemas/Metadata", "#/components/schemas/ExecutorMetadata", "#/components/schemas/DockerSystemInfo"]}, {"op": "add", "path": "/components/schemas/DockerSystemInfo/properties/runc_commit/allOf/0/x-scope", "value": ["", "#/components/schemas/Metadata", "#/components/schemas/ExecutorMetadata", "#/components/schemas/DockerSystemInfo"]}, {"op": "add", "path": "/components/schemas/DockerSystemInfo/properties/registry_config/allOf/0/x-scope", "value": ["", "#/components/schemas/Metadata", "#/components/schemas/ExecutorMetadata", "#/components/schemas/DockerSystemInfo"]}, {"op": "add", "path": "/components/schemas/DockerSystemInfo/properties/default_address_pools/items/x-scope", "value": ["", "#/components/schemas/Metadata", "#/components/schemas/ExecutorMetadata", "#/components/schemas/DockerSystemInfo"]}, {"op": "add", "path": "/components/schemas/DockerSystemInfo/properties/cgroup_version/allOf/0/x-scope", "value": ["", "#/components/schemas/Metadata", "#/components/schemas/ExecutorMetadata", "#/components/schemas/DockerSystemInfo"]}, {"op": "add", "path": "/components/schemas/DockerSystemInfo/properties/init_commit/allOf/0/x-scope", "value": ["", "#/components/schemas/Metadata", "#/components/schemas/ExecutorMetadata", "#/components/schemas/DockerSystemInfo"]}, {"op": "add", "path": "/components/schemas/DockerSystemInfo/properties/runtimes/additionalProperties/x-scope", "value": ["", "#/components/schemas/Metadata", "#/components/schemas/ExecutorMetadata", "#/components/schemas/DockerSystemInfo"]}, {"op": "add", "path": "/components/schemas/DockerSystemInfo/properties/isolation/allOf/0/x-scope", "value": ["", "#/components/schemas/Metadata", "#/components/schemas/ExecutorMetadata", "#/components/schemas/DockerSystemInfo"]}, {"op": "add", "path": "/components/schemas/DockerSystemInfo/properties/cgroup_driver/allOf/0/x-scope", "value": ["", "#/components/schemas/Metadata", "#/components/schemas/ExecutorMetadata", "#/components/schemas/DockerSystemInfo"]}, {"op": "add", "path": "/components/schemas/CardDetails/properties/checks/allOf/0/x-scope", "value": ["", "#/components/schemas/PaymentMethod", "#/components/schemas/CardDetails"]}, {"op": "add", "path": "/components/schemas/ApiCallWithPriceResultsPage/properties/items/items/x-scope", "value": ["", "#/components/schemas/ApiCallWithPriceResultsPage"]}, {"op": "add", "path": "/components/schemas/FileVolume/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/FileVolume"]}, {"op": "add", "path": "/components/schemas/FileVolume/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/FileVolume"]}, {"op": "add", "path": "/components/schemas/FileVolume/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/FileVolume"]}, {"op": "add", "path": "/components/schemas/Metadata/properties/executor/allOf/0/x-scope", "value": ["", "#/components/schemas/Metadata"]}, {"op": "add", "path": "/components/schemas/Metadata/properties/engine/allOf/0/x-scope", "value": ["", "#/components/schemas/Metadata"]}, {"op": "add", "path": "/components/schemas/Metadata/properties/cache/allOf/0/x-scope", "value": ["", "#/components/schemas/Metadata"]}, {"op": "add", "path": "/components/schemas/Metadata/properties/pubsub/allOf/0/x-scope", "value": ["", "#/components/schemas/Metadata"]}, {"op": "add", "path": "/components/schemas/Metadata/properties/environment/allOf/0/x-scope", "value": ["", "#/components/schemas/Metadata"]}, {"op": "add", "path": "/components/schemas/Metadata/properties/fs/allOf/0/x-scope", "value": ["", "#/components/schemas/Metadata"]}, {"op": "add", "path": "/components/schemas/PaymentMethod/properties/type/allOf/0/x-scope", "value": ["", "#/components/schemas/PaymentMethod"]}, {"op": "add", "path": "/components/schemas/PaymentMethod/properties/card/allOf/0/x-scope", "value": ["", "#/components/schemas/PaymentMethod"]}, {"op": "add", "path": "/components/schemas/PaymentMethod/properties/billing_info/allOf/0/x-scope", "value": ["", "#/components/schemas/PaymentMethod"]}, {"op": "add", "path": "/components/schemas/UnitAngularVelocityConversion/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitAngularVelocityConversion"]}, {"op": "add", "path": "/components/schemas/UnitAngularVelocityConversion/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitAngularVelocityConversion"]}, {"op": "add", "path": "/components/schemas/UnitAngularVelocityConversion/properties/output_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitAngularVelocityConversion"]}, {"op": "add", "path": "/components/schemas/UnitAngularVelocityConversion/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitAngularVelocityConversion"]}, {"op": "add", "path": "/components/schemas/UnitMassConversion/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitMassConversion"]}, {"op": "add", "path": "/components/schemas/UnitMassConversion/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitMassConversion"]}, {"op": "add", "path": "/components/schemas/UnitMassConversion/properties/output_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitMassConversion"]}, {"op": "add", "path": "/components/schemas/UnitMassConversion/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitMassConversion"]}, {"op": "add", "path": "/components/schemas/ApiToken/properties/token/allOf/0/x-scope", "value": ["", "#/components/schemas/ApiTokenResultsPage", "#/components/schemas/ApiToken"]}, {"op": "add", "path": "/components/schemas/UnitTemperatureConversion/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitTemperatureConversion"]}, {"op": "add", "path": "/components/schemas/UnitTemperatureConversion/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitTemperatureConversion"]}, {"op": "add", "path": "/components/schemas/UnitTemperatureConversion/properties/output_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitTemperatureConversion"]}, {"op": "add", "path": "/components/schemas/UnitTemperatureConversion/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitTemperatureConversion"]}, {"op": "add", "path": "/components/schemas/UnitVoltageConversion/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitVoltageConversion"]}, {"op": "add", "path": "/components/schemas/UnitVoltageConversion/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitVoltageConversion"]}, {"op": "add", "path": "/components/schemas/UnitVoltageConversion/properties/output_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitVoltageConversion"]}, {"op": "add", "path": "/components/schemas/UnitVoltageConversion/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitVoltageConversion"]}, {"op": "add", "path": "/components/schemas/UnitChargeConversion/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitChargeConversion"]}, {"op": "add", "path": "/components/schemas/UnitChargeConversion/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitChargeConversion"]}, {"op": "add", "path": "/components/schemas/UnitChargeConversion/properties/output_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitChargeConversion"]}, {"op": "add", "path": "/components/schemas/UnitChargeConversion/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitChargeConversion"]}, {"op": "add", "path": "/components/schemas/UnitLengthConversion/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitLengthConversion"]}, {"op": "add", "path": "/components/schemas/UnitLengthConversion/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitLengthConversion"]}, {"op": "add", "path": "/components/schemas/UnitLengthConversion/properties/output_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitLengthConversion"]}, {"op": "add", "path": "/components/schemas/UnitLengthConversion/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitLengthConversion"]}, {"op": "add", "path": "/components/schemas/UnitConcentrationConversion/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitConcentrationConversion"]}, {"op": "add", "path": "/components/schemas/UnitConcentrationConversion/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitConcentrationConversion"]}, {"op": "add", "path": "/components/schemas/UnitConcentrationConversion/properties/output_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitConcentrationConversion"]}, {"op": "add", "path": "/components/schemas/UnitConcentrationConversion/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitConcentrationConversion"]}, {"op": "add", "path": "/components/schemas/PhysicsConstant/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/PhysicsConstant"]}, {"op": "add", "path": "/components/schemas/PhysicsConstant/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/PhysicsConstant"]}, {"op": "add", "path": "/components/schemas/PhysicsConstant/properties/constant/allOf/0/x-scope", "value": ["", "#/components/schemas/PhysicsConstant"]}, {"op": "add", "path": "/components/schemas/UnitVolumeConversion/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitVolumeConversion"]}, {"op": "add", "path": "/components/schemas/UnitVolumeConversion/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitVolumeConversion"]}, {"op": "add", "path": "/components/schemas/UnitVolumeConversion/properties/output_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitVolumeConversion"]}, {"op": "add", "path": "/components/schemas/UnitVolumeConversion/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitVolumeConversion"]}, {"op": "add", "path": "/components/schemas/UnitPowerConversion/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitPowerConversion"]}, {"op": "add", "path": "/components/schemas/UnitPowerConversion/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitPowerConversion"]}, {"op": "add", "path": "/components/schemas/UnitPowerConversion/properties/output_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitPowerConversion"]}, {"op": "add", "path": "/components/schemas/UnitPowerConversion/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitPowerConversion"]}, {"op": "add", "path": "/components/schemas/CodeOutput/properties/output_files/items/x-scope", "value": ["", "#/components/schemas/CodeOutput"]}, {"op": "add", "path": "/components/schemas/ExecutorMetadata/properties/docker_info/allOf/0/x-scope", "value": ["", "#/components/schemas/Metadata", "#/components/schemas/ExecutorMetadata"]}, {"op": "add", "path": "/components/schemas/ExecutorMetadata/properties/environment/allOf/0/x-scope", "value": ["", "#/components/schemas/Metadata", "#/components/schemas/ExecutorMetadata"]}, {"op": "add", "path": "/components/schemas/UnitPressureConversion/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitPressureConversion"]}, {"op": "add", "path": "/components/schemas/UnitPressureConversion/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitPressureConversion"]}, {"op": "add", "path": "/components/schemas/UnitPressureConversion/properties/output_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitPressureConversion"]}, {"op": "add", "path": "/components/schemas/UnitPressureConversion/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitPressureConversion"]}, {"op": "add", "path": "/components/schemas/UserResultsPage/properties/items/items/x-scope", "value": ["", "#/components/schemas/UserResultsPage"]}, {"op": "add", "path": "/components/schemas/BillingInfo/properties/address/allOf/0/x-scope", "value": ["", "#/components/schemas/BillingInfo"]}, {"op": "add", "path": "/components/schemas/InvoiceLineItem/properties/currency/allOf/0/x-scope", "value": ["", "#/components/schemas/Invoice", "#/components/schemas/InvoiceLineItem"]}, {"op": "add", "path": "/components/schemas/ExtendedUserResultsPage/properties/items/items/x-scope", "value": ["", "#/components/schemas/ExtendedUserResultsPage"]}, {"op": "add", "path": "/components/schemas/DeviceAccessTokenRequestForm/properties/grant_type/allOf/0/x-scope", "value": ["", "#/components/schemas/DeviceAccessTokenRequestForm"]}, {"op": "add", "path": "/components/schemas/UnitEnergyConversion/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitEnergyConversion"]}, {"op": "add", "path": "/components/schemas/UnitEnergyConversion/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitEnergyConversion"]}, {"op": "add", "path": "/components/schemas/UnitEnergyConversion/properties/output_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitEnergyConversion"]}, {"op": "add", "path": "/components/schemas/UnitEnergyConversion/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitEnergyConversion"]}, {"op": "add", "path": "/components/schemas/UnitSolidAngleConversion/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitSolidAngleConversion"]}, {"op": "add", "path": "/components/schemas/UnitSolidAngleConversion/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitSolidAngleConversion"]}, {"op": "add", "path": "/components/schemas/UnitSolidAngleConversion/properties/output_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitSolidAngleConversion"]}, {"op": "add", "path": "/components/schemas/UnitSolidAngleConversion/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitSolidAngleConversion"]}, {"op": "add", "path": "/components/schemas/Connection/properties/cluster/allOf/0/x-scope", "value": ["", "#/components/schemas/Metadata", "#/components/schemas/EngineMetadata", "#/components/schemas/Connection"]}, {"op": "add", "path": "/components/schemas/Connection/properties/gateway/allOf/0/x-scope", "value": ["", "#/components/schemas/Metadata", "#/components/schemas/EngineMetadata", "#/components/schemas/Connection"]}, {"op": "add", "path": "/components/schemas/Connection/properties/leaf/allOf/0/x-scope", "value": ["", "#/components/schemas/Metadata", "#/components/schemas/EngineMetadata", "#/components/schemas/Connection"]}, {"op": "add", "path": "/components/schemas/Connection/properties/jetstream/allOf/0/x-scope", "value": ["", "#/components/schemas/Metadata", "#/components/schemas/EngineMetadata", "#/components/schemas/Connection"]}, {"op": "add", "path": "/components/schemas/Jetstream/properties/config/allOf/0/x-scope", "value": ["", "#/components/schemas/Metadata", "#/components/schemas/EngineMetadata", "#/components/schemas/Connection", "#/components/schemas/Jetstream"]}, {"op": "add", "path": "/components/schemas/Jetstream/properties/meta/allOf/0/x-scope", "value": ["", "#/components/schemas/Metadata", "#/components/schemas/EngineMetadata", "#/components/schemas/Connection", "#/components/schemas/Jetstream"]}, {"op": "add", "path": "/components/schemas/Jetstream/properties/stats/allOf/0/x-scope", "value": ["", "#/components/schemas/Metadata", "#/components/schemas/EngineMetadata", "#/components/schemas/Connection", "#/components/schemas/Jetstream"]}, {"op": "add", "path": "/components/schemas/CustomerBalance/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/CustomerBalance"]}, {"op": "add", "path": "/components/schemas/UnitMetricConversion/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitMetricConversion"]}, {"op": "add", "path": "/components/schemas/UnitMetricConversion/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitMetricConversion"]}, {"op": "add", "path": "/components/schemas/UnitMetricConversion/properties/output_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitMetricConversion"]}, {"op": "add", "path": "/components/schemas/UnitMetricConversion/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitMetricConversion"]}, {"op": "add", "path": "/components/schemas/Invoice/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/Invoice"]}, {"op": "add", "path": "/components/schemas/Invoice/properties/lines/items/x-scope", "value": ["", "#/components/schemas/Invoice"]}, {"op": "add", "path": "/components/schemas/Invoice/properties/currency/allOf/0/x-scope", "value": ["", "#/components/schemas/Invoice"]}, {"op": "add", "path": "/components/schemas/Session/properties/session_token/allOf/0/x-scope", "value": ["", "#/components/schemas/Session"]}, {"op": "add", "path": "/components/schemas/UnitAreaConversion/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitAreaConversion"]}, {"op": "add", "path": "/components/schemas/UnitAreaConversion/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitAreaConversion"]}, {"op": "add", "path": "/components/schemas/UnitAreaConversion/properties/output_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitAreaConversion"]}, {"op": "add", "path": "/components/schemas/UnitAreaConversion/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitAreaConversion"]}, {"op": "add", "path": "/components/schemas/Address/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/Customer", "#/components/schemas/Address"]}, {"op": "add", "path": "/components/schemas/RegistryServiceConfig/properties/index_configs/additionalProperties/x-scope", "value": ["", "#/components/schemas/Metadata", "#/components/schemas/ExecutorMetadata", "#/components/schemas/DockerSystemInfo", "#/components/schemas/RegistryServiceConfig"]}, {"op": "add", "path": "/components/schemas/UnitRadiationConversion/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitRadiationConversion"]}, {"op": "add", "path": "/components/schemas/UnitRadiationConversion/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitRadiationConversion"]}, {"op": "add", "path": "/components/schemas/UnitRadiationConversion/properties/output_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitRadiationConversion"]}, {"op": "add", "path": "/components/schemas/UnitRadiationConversion/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitRadiationConversion"]}, {"op": "add", "path": "/components/schemas/FileConversion/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/FileConversion"]}, {"op": "add", "path": "/components/schemas/FileConversion/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/FileConversion"]}, {"op": "add", "path": "/components/schemas/FileConversion/properties/output_format/allOf/0/x-scope", "value": ["", "#/components/schemas/FileConversion"]}, {"op": "add", "path": "/components/schemas/FileConversion/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/FileConversion"]}, {"op": "add", "path": "/components/schemas/UnitForceConversion/properties/status/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitForceConversion"]}, {"op": "add", "path": "/components/schemas/UnitForceConversion/properties/id/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitForceConversion"]}, {"op": "add", "path": "/components/schemas/UnitForceConversion/properties/output_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitForceConversion"]}, {"op": "add", "path": "/components/schemas/UnitForceConversion/properties/src_format/allOf/0/x-scope", "value": ["", "#/components/schemas/UnitForceConversion"]}, {"op": "add", "path": "/components/responses/Error/content/application~1json/schema/x-scope", "value": ["", "#/components/responses/Error"]}]