openapi: 3.0.1
info:
    title: KittyCAD
    description: 'This is the KittyCAD API.'
    termsOfService: https://kittycad.io/terms-and-conditions/
    contact:
        email: support@kittycad.io
    version: 0.1.0
externalDocs:
    description: Find out more about the KittyCAD API.
    url: https://docs.kittycad.io
servers:
    - url: https://api.kittycad.io
tags:
    - name: file
      description: CAD file operations.
    - name: meta
      description: Meta information about servers and instances.
paths:
    /file/conversion/{sourceFormat}/{outputFormat}:
        post:
            tags:
                - file
            security:
                - bearerAuth: []
            summary: Convert CAD file
            description: Convert a CAD file from one format to another. If the file being converted is larger than a certain size it will be performed asynchronously.
            operationId: fileConvert
            parameters:
                - name: sourceFormat
                  in: path
                  description: The format of the file to convert.
                  required: true
                  schema:
                      $ref: '#/components/schemas/ValidFileTypes'
                - name: ouputFormat
                  in: path
                  description: The format the file should be converted to.
                  required: true
                  schema:
                      $ref: '#/components/schemas/ValidFileTypes'
            requestBody:
                description: The content of the file to convert, base64 encoded.
                required: true
                content:
                    text/plain:
                        schema:
                            type: string
                            format: base64
            responses:
                200:
                    description: Returns the contents of the converted file, base64 encoded, if successful.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FileConversion'
                            example:
                                id: '6970d4f2-8979-4461-a9a1-ace62548fb5f'
                                created_at: '2021-11-02T21:48:05+0000'
                                completed_at: '2021-11-02T23:12:05+0000'
                                user_id: 'ckv5prd3j000607mlnmwlpyz8'
                                src_format: 'obj'
                                output_format: 'step'
                                output: 'BASE64_ENCODED_FILE_OUTPUT'
                                status: 'Completed'
                202:
                    description: The file conversion is being performed asynchronously. You can use the `id` returned from the request to poll for status information about the conversion.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FileConversion'
                            example:
                                id: '6970d4f2-8979-4461-a9a1-ace62548fb5f'
                                created_at: '2021-11-02T21:48:05+0000'
                                user_id: 'ckv5prd3j000607mlnmwlpyz8'
                                src_format: 'obj'
                                output_format: 'step'
                                status: 'Uploaded'
                400:
                    $ref: '#/components/responses/BadRequest'
                401:
                    $ref: '#/components/responses/Unauthorized'
                403:
                    $ref: '#/components/responses/Forbidden'
                406:
                    $ref: '#/components/responses/NotAcceptable'
    /file/conversion/{id}:
        get:
            tags:
                - file
            security:
                - bearerAuth: []
            summary: Get a file conversion
            description: Get the status of a file conversion.
            operationId: fileConversionByID
            parameters:
                - name: id
                  in: path
                  description: The id of the file conversion.
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: Returns the status of the file conversion. If completed, the contents of the converted file will be returned as a base64 encoded string.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FileConversion'
                            example:
                                id: '6970d4f2-8979-4461-a9a1-ace62548fb5f'
                                created_at: '2021-11-02T21:48:05+0000'
                                user_id: 'ckv5prd3j000607mlnmwlpyz8'
                                src_format: 'obj'
                                output_format: 'step'
                                status: 'In Progress'
                400:
                    $ref: '#/components/responses/BadRequest'
                401:
                    $ref: '#/components/responses/Unauthorized'
                403:
                    $ref: '#/components/responses/Forbidden'
                404:
                    $ref: '#/components/responses/NotFound'
                406:
                    $ref: '#/components/responses/NotAcceptable'
    /_meta/debug/session:
        get:
            tags:
                - meta
            security:
                - bearerAuth: []
            summary: Get auth session
            description: Get information about your API request session. This is primarily used for debugging.
            operationId: metaDebugSession
            responses:
                200:
                    description: Returns the authorized user's authentication session if successful.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AuthSession'
                            example:
                                created_at: '2021-11-02T21:48:05+0000'
                                id: '6970d4f2-8979-4461-a9a1-ace62548fb5f'
                                ip_address: '203.0.113.0'
                                is_valid: true
                                token: '435f9688-365f-4a2d-860b-554798160cfe'
                                user_id: 'ckv5prd3j000607mlnmwlpyz8'
                400:
                    $ref: '#/components/responses/BadRequest'
                401:
                    $ref: '#/components/responses/Unauthorized'
                403:
                    $ref: '#/components/responses/Forbidden'
    /_meta/debug/instance:
        get:
            tags:
                - meta
            security:
                - bearerAuth: []
            summary: Get instance metadata
            description: Get information about this specific API server instance. This is primarily used for debugging.
            operationId: metaDebugInstance
            responses:
                200:
                    description: Returns the instance metadata if successful.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InstanceMetadata'
                            example:
                                id: '3247495290486004999'
                                cpu_platform: 'Intel Haswell'
                                environment: 'PRODUCTION'
                                git_hash: 'd454900'
                                hostname: 'api-us-central1-0kph.us-central1-f.c.kittycadapi.internal'
                                image: 'projects/kittycadapi/global/images/packer-1635462081'
                                ip_address: '10.127.15.206'
                                machine_type: 'projects/199385932268/machineTypes/n1-standard-16'
                                name: 'api-us-central1-0kph'
                                zone: 'projects/199385932268/zones/us-central1-f'
                                description: 'An API server instance.'
                400:
                    $ref: '#/components/responses/BadRequest'
                401:
                    $ref: '#/components/responses/Unauthorized'
                403:
                    $ref: '#/components/responses/Forbidden'
    /ping:
        get:
            tags:
                - meta
            summary: Ping
            description: Simple ping to the server.
            operationId: ping
            responses:
                200:
                    description: Returns the message "pong" if successful.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        enum:
                                            - pong
                            example:
                                message: 'pong'
components:
    schemas:
        ValidFileTypes:
            type: string
            enum:
                - step
                - obj
                - stl
                - dxf
                - dwg
        AuthSession:
            type: object
            properties:
                id:
                    type: string
                    description: The id of the session.
                token:
                    type: string
                    format: uuid
                    description: The user's token.
                user_id:
                    type: string
                    description: The user's id.
                ip_address:
                    type: string
                    description: The IP address the request originated from.
                is_valid:
                    type: boolean
                    default: false
                    description: If the token is valid.
                created_at:
                    type: string
                    format: date-time
                    description: The date and time the session/request was created.
        FileConversion:
            type: object
            properties:
                id:
                    type: string
                    description: The id of the file conversion.
                created_at:
                    type: string
                    format: date-time
                    description: The date and time the file conversion was created.
                completed_at:
                    type: string
                    format: date-time
                    description: The date and time the file conversion was completed.
                status:
                    type: string
                    description: The status of the file conversion.
                    enum:
                      - 'Queued'
                      - 'Uploaded'
                      - 'In Progress'
                      - 'Completed'
                      - 'Failed'
                src_format:
                    $ref: '#/components/schemas/ValidFileTypes'
                    description: The format of the original file uploaded to be converted.
                output_format:
                    $ref: '#/components/schemas/ValidFileTypes'
                    description: The output format requested for the file.
                output:
                    type: string
                    format: base64
                    description: The converted file, base64 encoded.
        InstanceMetadata:
            type: object
            properties:
                id:
                    type: string
                    description: The id of the instance.
                git_hash:
                    type: string
                    description: The git hash of the code the server was built from.
                environment:
                    type: string
                    description: The type of environment.
                    enum:
                      - 'DEVELOPMENT'
                      - 'PREVIEW'
                      - 'PRODUCTION'
                name:
                    type: string
                    description: The name of the instance.
                description:
                    type: string
                    description: The description of the instance.
                ip_address:
                    type: string
                    format: ipv4
                    description: The IP address of the instance.
                zone:
                    type: string
                    description: The zone of the instance.
                image:
                    type: string
                    description: The image that was used as the base of the instance.
                hostname:
                    type: string
                    format: hostname
                    description: The hostname of the instance.
                cpu_platform:
                    type: string
                    description: The CPU platform of the instance.
                machine_type:
                    type: string
                    description: The machine type of the instance.
        ErrorMessage:
            type: object
            properties:
                message:
                    type: string
                    description: The message.
    responses:
        # 400 BadRequest
        BadRequest:
            description: The request failed could not authenticate, but the token existed.
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ErrorMessage'
        # 401 Unauthorized
        Unauthorized:
            description: No valid API key provided.
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ErrorMessage'
        # 403 Forbidden
        Forbidden:
            description: The API key doesn't have permissions to perform the request.
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ErrorMessage'
        # 404 NotFound
        NotFound:
            description: The requested resource doesn't exist.
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ErrorMessage'
        # 406 NotAcceptable
        NotAcceptable:
            description: The request was unacceptable, often due to missing a required parameter.
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ErrorMessage'
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
